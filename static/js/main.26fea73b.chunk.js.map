{"version":3,"sources":["components/Navigation.tsx","components/LandingPage.tsx","gameLogic/GameConfig.ts","gameLogic/game.ts","userdata.ts","components/GameComponent.tsx","components/GraphInput.tsx","components/Quest.tsx","components/Tutorial.tsx","components/LevelOverviewElements.tsx","components/LevelOverview.tsx","components/Footer.tsx","questionLogic/questionUtility.tsx","components/MultipleChoiceQuestion.tsx","components/Quiz.tsx","components/Question.tsx","components/Theory.tsx","questSetupHelper.ts","levels/exampleLevels/exampleQuest1.ts","levels/exampleLevels/exampleQuest2.ts","levels/exampleLevels/exampleQuiz1.ts","levels/exampleLevels/exampleTheory1.ts","levels/level1/level1Quest1.ts","levels/level1/level1Quest2.ts","levels/level2/level2Quest1.ts","App.tsx","index.tsx"],"names":["Navigation","Navbar","collapseOnSelect","expand","bg","variant","Brand","as","Link","to","className","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","title","Item","Divider","LandingPage","Container","Row","Col","type","src","alt","controlType","character","settings","inputData","inputDataCopy","moveCamRight","moveCamLeft","moveCamUp","moveCamDown","cameraRide","cameraRideIndex","cameraWait","gameEndModal","graphProgress","timeStamp","index","Game","gameSettings","data","gameEnded","setGraphProgress","variables","player","cursors","platforms","staticTraps","dynamicTraps","staticGoals","dynamicGoals","points","score","scoreText","gameRunning","collectedGoal","config","Phaser","AUTO","width","height","scale","mode","Scale","RESIZE","physics","default","arcade","gravity","y","debug","parent","scene","preload","create","update","game","console","log","undefined","Map","loadCharacter","call","this","onPreload","preCreate","push","x","wait","cameras","main","on","restart","world","bounds","setSize","gameWorld","setBounds","loadExternalButtons","input","keyboard","createCursorKeys","add","staticGroup","characterSpawnXY","sprite","setBounce","setCollideWorldBounds","collider","loadCharacterAnimations","group","overlap","point","disableBody","setText","collideWithTrap","collectGoal","text","fontSize","fill","afterCreate","cameraRideFunc","loadControls","setVelocityX","anims","play","right","isDown","scrollX","left","up","scrollY","down","onUpdate","children","iterate","c","setBounceY","Math","FloatBetween","Scene","length","canvasWidth","document","getElementById","firstChild","canvasHeight","xUnreachable","yUnreachable","xReached","abs","yReached","Date","getTime","error","load","spritesheet","frameWidth","frameHeight","key","frames","generateFrameNumbers","start","end","frameRate","repeat","controls","t_v_graph","t_v_controls","t_v_graph_interpolated","arrowKeys","body","touching","setVelocityY","interpolate","speed","time","timeDiff","endGame","progress","restartGame","setTimeout","fade","bind","trap","startGame","i","startFollow","onStart","goal","setAlpha","restartBtn","addEventListener","startBtn","addEvents","events","buttonId","action","btn","forEach","event","saveTaskProgress","task","validTask","oldUserdata","loadUserdataLocal","find","tasks","localStorage","userdata","JSON","stringify","saveUserdataLocal","resetUserdata","confirm","removeItem","parse","purchasedItems","achievedPoints","possiblePoints","GameComponent","props","setState","won","showModal","nextBtnCSS","retryBtnVariant","pointsToWin","state","handleClose","handleRestart","handleNext","redirect","nextPage","loadTaskProgress","Modal","show","onHide","centered","Header","closeButton","Title","Body","Footer","Button","onClick","style","display","React","Component","HC_more","Highcharts","require","GraphInput","internalChart","options","cfg","yAxis","yTitle","min","minY","max","maxY","xAxis","xTitle","tooltip","formatter","toFixed","series","dragDrop","draggableY","dragPrecisionY","dragMaxY","dragMinY","showInLegend","zoneAxis","zones","value","color","chart","constructorType","callback","afterChartCreated","highcharts","Quest","graphInputRef","createRef","graphInputComponent","graph","ref","fluid","sm","md","description","current","colorGraphUpToX","Tutorial","Carousel","Caption","top","BadgeType","LevelOverviewBar","CardDeck","map","e","idx","Card","Subtitle","getCode","badge","Text","buttonLink","buttonName","toString","LevelOverviewCard","THEORIE","Badge","SPIEL","QUIZ","barConfigTutorial","barConfigExample","barConfig1","barConfig2","LevelOverview","Tab","defaultActiveKey","justify","eventKey","disabled","Content","Pane","QuestionStatus","getAnswerBoxes","questionIdx","onSelect","kind","Form","statements","elementConfig","answerIdx","FormCheck","label","name","onChange","mapStatementToCheckbox","getCheckboxes","mapStatementToButton","getRadioButtons","getBooleanRadioButtons","getSolveButton","onClickFkt","isEnabled","MultipleChoiceQuestion","path","useState","Unsolved","status","setStatus","s","isTrue","getCorrectAnswerVector","correctValues","_","getEmptyAnswerVector","selected","setSelected","old","slice","answerBoxes","imgPath","Image","rounded","image","check","array1","array2","equal","Wrong","Correct","setSolveButton","solveButton","Quiz","questions","getQuestionCode","Question","Slide","optionalCaptionBody","optionalImage","Theory","interval","slides","convertDataArray","array","ret","setOrigin","setScale","setRandomBounce","hiker","App","basename","exact","component","exampleQuest1","exampleQuest2","exampleQuiz1","exampleTheory1","level1Quest1","level1Quest2","level2Quest1","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.26fea73b.chunk.js","sourcesContent":["import React, { ReactElement } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\n\nexport default function Navigation(): ReactElement {\n\treturn (\n\t\t<Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\">\n\t\t\t<Navbar.Brand as={Link} to=\"/\" className=\"navbarTitle\">\n\t\t\t\tPhysics Game\n\t\t\t</Navbar.Brand>\n\t\t\t<Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n\t\t\t<Navbar.Collapse id=\"responsive-navbar-nav\">\n\t\t\t\t<Nav>\n\t\t\t\t\t<Nav.Link as={Link} to=\"/\" className=\"navElem\">\n\t\t\t\t\t\tHome\n\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t<Nav.Link as={Link} to=\"/LevelOverview\" className=\"navElem\">\n\t\t\t\t\t\t&Uuml;bersicht\n\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t<NavDropdown title=\"Aufgaben\" id=\"collasible-nav-dropdown\" className=\"navElem\">\n\t\t\t\t\t\t<NavDropdown.Item as={Link} to=\"/ExampleQuest1\" className=\"navElem\">\n\t\t\t\t\t\t\tBeispiel Aufgabe 1\n\t\t\t\t\t\t</NavDropdown.Item>\n\t\t\t\t\t\t<NavDropdown.Item as={Link} to=\"/ExampleQuest2\" className=\"navElem\">\n\t\t\t\t\t\t\tBeispiel Aufgabe 2\n\t\t\t\t\t\t</NavDropdown.Item>\n\t\t\t\t\t\t<NavDropdown.Divider />\n\t\t\t\t\t\t<NavDropdown.Item as={Link} to=\"/ExampleQuiz1\" className=\"navElem\">\n\t\t\t\t\t\t\tBeispiel Quiz 1\n\t\t\t\t\t\t</NavDropdown.Item>\n\t\t\t\t\t\t<NavDropdown.Divider />\n\t\t\t\t\t\t<NavDropdown.Item as={Link} to=\"/level1Quest1\" className=\"navElem\">\n\t\t\t\t\t\t\tLevel 1 Aufgabe 1\n\t\t\t\t\t\t</NavDropdown.Item>\n\t\t\t\t\t\t<NavDropdown.Item as={Link} to=\"/level1Quest2\" className=\"navElem\">\n\t\t\t\t\t\t\tLevel 1 Aufgabe 2\n\t\t\t\t\t\t</NavDropdown.Item>\n\t\t\t\t\t\t<NavDropdown.Divider />\n\t\t\t\t\t\t<NavDropdown.Item as={Link} to=\"/level1Quest2\" className=\"navElem\">\n\t\t\t\t\t\t\tLevel 2 Aufgabe 1\n\t\t\t\t\t\t</NavDropdown.Item>\n\t\t\t\t\t</NavDropdown>\n\t\t\t\t</Nav>\n\t\t\t\t<Nav className=\"ml-auto\">\n\t\t\t\t\t<Nav.Link as={Link} to=\"/\" className=\"navElem\">\n\t\t\t\t\t\tAnmelden\n\t\t\t\t\t</Nav.Link>\n\t\t\t\t</Nav>\n\t\t\t</Navbar.Collapse>\n\t\t</Navbar>\n\t);\n}\n","import React, { ReactElement } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"./../css/style.landingpage.css\";\n\nexport default function LandingPage(): ReactElement {\n\treturn (\n\t\t<>\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col className=\"mt-4\">\n\t\t\t\t\t\t<Link to=\"/ExampleQuest1\">\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btnImage\">\n\t\t\t\t\t\t\t\t<img src=\"assets/PlatformerAssetsBase/Items/cloud1.png\" alt=\"\" />\n\t\t\t\t\t\t\t\t<div className=\"btnImageText\">Jetzt&nbsp;Anfangen</div>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col className=\"mt-4\">\n\t\t\t\t\t\t<Link to=\"/ExampleQuest1\">\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btnImage\">\n\t\t\t\t\t\t\t\t<img src=\"assets/PlatformerAssetsBase/Items/cloud3.png\" alt=\"\" />\n\t\t\t\t\t\t\t\t<div className=\"btnImageText\">Tutorial&nbsp;&uuml;berspringen</div>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col className=\"mt-4\">\n\t\t\t\t\t\t<Link to=\"/ExampleQuest1\">\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btnImage\">\n\t\t\t\t\t\t\t\t<img src=\"assets/PlatformerAssetsBase/Items/cloud2.png\" alt=\"\" />\n\t\t\t\t\t\t\t\t<div className=\"btnImageText\">Beispielvideo</div>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t\t<img src=\"LandingPage1.png\" alt=\"\" className=\"w-100 pt-5 pb-2\" />\n\t\t</>\n\t);\n}\n","import Game from \"./game\";\n\n/**\n * @typedef {object} gameSettingsType - collection of settings for a (phaser) game. For implementation examples see example levels.\n */\nexport interface GameConfig {\n\t/**\n\t * Required\n\t *\n\t * Bounds (height and width) for the game world as well as for the camera\n\t */\n\tgameWorld: {\n\t\theight: number;\n\t\twidth: number;\n\t};\n\n\t/**\n\t * Optional\n\t *\n\t * onStart gets executed when the game starts.\n\t *\n\t * Important: Please be aware that the game can start multiple times, if the player restarts the game.\n\t * Make sure to the the function for this case.\n\t */\n\tonStart?: (this: Game) => void;\n\n\t/**\n\t * Optional\n\t *\n\t * onPreload gets executed with the preload function of phaser.\n\t *\n\t * The preload function is the first function that gets executed, before create and update.\n\t *\n\t * All required Images / Assets should be loaded in this function.\n\t */\n\tonPreload?: (this: Game) => void;\n\n\t/**\n\t * Optional\n\t *\n\t * preCreate gets executed at the beginning of the create function of phaser.\n\t *\n\t * The create function is the second function that gets executed, after preload and before update.\n\t *\n\t * Only background assets should be loaded here. Initiation of all other assets should be in afterCreate.\n\t */\n\tpreCreate?: (this: Game) => void;\n\n\t/**\n\t * Optional\n\t *\n\t * afterCreate gets executed at the end of the create function of phaser.\n\t *\n\t * The create function is the second function that gets executed, after preload and before update.\n\t *\n\t * Initiation of assets should in this function.\n\t * Add all static platforms to this.platforms and all collectable points to this.points\n\t */\n\tafterCreate?: (this: Game) => void;\n\n\t/**\n\t * Optional\n\t *\n\t * onUpdate gets executed every time the update function of phaser is called. This happens continuously after the game is started.\n\t *\n\t * All tasks that need to happen continuously throughout the game need to be in onUpdate.\n\t *\n\t * If controlType is none, onUpdate should also contain some kind of controls (not recommended).\n\t */\n\tonUpdate?: (this: Game) => void;\n\n\t/**\n\t * Optional\n\t *\n\t * An array of objects, containing x, y and wait values.\n\t *\n\t * The game goes through this array when the page loads.\n\t * Goes to the given `x`, `y` coordinates and waits for `wait` milliseconds, before moving on to the next coordinates.\n\t * The coordinates define the top left corner of the camera.\n\t * If the given value is to large, a warning will be logged and the camera will simply move as far as possible into that direction.\n\t *\n\t * Max x value: game bounds - width of the game canvas (which is responsive)\n\t *\n\t * Max y value: game bounds - height of the game canvas.\n\t */\n\tcameraRide?: {\n\t\tx: number;\n\t\ty: number;\n\t\twait: number;\n\t}[];\n\n\t/**\n\t * Required\n\t *\n\t * If controls is not \"none\", this will add the specified controls to the game.\n\t * See controlType enum for more information.\n\t */\n\tcontrols: controlType;\n\n\t/**\n\t * Required\n\t *\n\t * The game automatically loads all necessary sprite sheets (animations) for the selected character.\n\t * See character enum for more information.\n\t */\n\tcharacter: character;\n\n\t/**\n\t * Optional\n\t *\n\t * Set the spawn coordinates for the player.\n\t */\n\tcharacterSpawnXY?: {\n\t\tx: number;\n\t\ty: number;\n\t};\n\n\t/**\n\t * Optional\n\t *\n\t * If the Player has at least `pointsToWin` points at the end of the game (and did not collide with a trap), he win's.\n\t * Note that the player also wins if he collects a goal.\n\t */\n\tpointsToWin?: number;\n}\n\n/**\n * @typedef {object} controlType contains all premade control logic for the game.\n * If you implement your own controls, set this to none.\n *\n * TODO: More control types will be added here\n */\nexport enum controlType {\n\t/**\n\t * Adds no controls\n\t */\n\tnone,\n\n\t/**\n\t * Adds controls using the arrow keys. Intended for level building and debugging only!\n\t */\n\tarrowKeys,\n\n\t/**\n\t * Adds t-v-graph controls.\n\t *\n\t * The current speed will be the value current datapoint.\n\t *\n\t * After one second the current datapoint will be set to the next datapoint.\n\t */\n\tt_v_graph,\n\n\t/**\n\t * Adds t-v-graph controls.\n\t *\n\t * The current speed will be the interpolated value between the current datapoint and the next datapoint.\n\t * This means that the speed will not jump from the current value to the next, but slowly rise/lower itself to the next value.\n\t *\n\t * After one second the current datapoint will be set to the next datapoint.\n\t */\n\tt_v_graph_interpolated\n}\n\n/**\n * @typedef {object} character contains all possible characters.\n * The game automatically loads all necessary sprite sheets (animations) for the selected character.\n *\n * TODO: More characters will be added here\n */\nexport enum character {\n\thiker\n}\n","import \"phaser\";\nimport { GameConfig, controlType, character } from \"./GameConfig\";\n\nlet settings: GameConfig;\nlet inputData: { y: number }[];\n// inputDataCopy is a copy of inputData when the game started\nlet inputDataCopy: { y: number }[];\n\n// moveCamRight & moveCamLeft are true if the move camera buttons are clicked\nlet moveCamRight: boolean;\nlet moveCamLeft: boolean;\nlet moveCamUp: boolean;\nlet moveCamDown: boolean;\n\n// cameraRide is true as long as the cameraRide is not finished.\nlet cameraRide: boolean;\nlet cameraRideIndex: number;\nlet cameraWait: number;\n\nlet gameEndModal: (goal: boolean, trap: boolean, score: number, restart: () => void) => void;\nlet graphProgress: (x: number) => void;\n\n// variables for t_v_graph controls\nlet timeStamp: number | undefined;\nlet index: number;\n\nexport default class Game extends Phaser.Scene {\n\t/**\n\t * @param {gameSettings} settings - settings for phaser\n\t * @param Array data - movement data for controls\n\t * @param function gameEnded - function that will be called when the game ended\n\t */\n\tconstructor(\n\t\tgameSettings: GameConfig,\n\t\tdata: { y: number }[],\n\t\tgameEnded: (goal: boolean, trap: boolean, score: number, restart: () => void) => void,\n\t\tsetGraphProgress: (x: number) => void\n\t) {\n\t\tsuper(\"Game\");\n\t\tconsole.log(\"%cInitiated new Game\", \"color: green\");\n\t\tmoveCamRight = false;\n\t\tmoveCamLeft = false;\n\t\tmoveCamUp = false;\n\t\tmoveCamDown = false;\n\t\tcameraRide = false;\n\t\tcameraRideIndex = 0;\n\t\tcameraWait = 0;\n\t\tgraphProgress = setGraphProgress;\n\t\ttimeStamp = undefined;\n\t\tindex = 0;\n\n\t\tthis.gameRunning = false;\n\n\t\tsettings = gameSettings;\n\t\tinputData = data;\n\t\tgameEndModal = gameEnded;\n\n\t\tthis.variables = new Map();\n\t}\n\n\t/**\n\t * In this map any used objects, variables or anything else used inside the configs can be saved for later use.\n\t */\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tpublic variables: Map<string, any>;\n\n\tpublic player!: Phaser.Physics.Arcade.Sprite;\n\tpublic cursors!: Phaser.Types.Input.Keyboard.CursorKeys;\n\n\t/**\n\t * Physics group for all static objects that should collide with the Player.\n\t *\n\t * Add ground, walls, platforms etc. to this group by using `this.platforms.create(x, y, key)`.\n\t * See `create()` for more information.\n\t */\n\tpublic platforms!: Phaser.Physics.Arcade.StaticGroup;\n\n\t/**\n\t * Physics group for all static objects that end (lose) the game if the player collides with them.\n\t *\n\t * Add traps to this group by using `this.staticTraps.create(x, y, key)`.\n\t * See `create()` for more information.\n\t */\n\tpublic staticTraps!: Phaser.Physics.Arcade.StaticGroup;\n\n\t/**\n\t * Physics group for all dynamic objects that end (lose) the game if the player collides with them.\n\t *\n\t * Add traps to this group by using `this.dynamicTraps.create(x, y, key)`.\n\t * See `create()` for more information.\n\t */\n\tpublic dynamicTraps!: Phaser.Physics.Arcade.Group;\n\n\t/**\n\t * Physics group for all static objects that end (win) the game if the player collides with them.\n\t *\n\t * Add goals to this group by using `this.staticGoals.create(x, y, key)`.\n\t * See `create()` for more information.\n\t */\n\tpublic staticGoals!: Phaser.Physics.Arcade.StaticGroup;\n\n\t/**\n\t * Physics group for all dynamic objects that end (win) the game if the player collides with them.\n\t *\n\t * Add goals to this group by using `this.dynamicGoals.create(x, y, key)`.\n\t * See `create()` for more information.\n\t */\n\tpublic dynamicGoals!: Phaser.Physics.Arcade.Group;\n\n\t/**\n\t * Physics group for all objects that can be collected by the player to add points to the score.\n\t * The logic for collection the object, making it invisible and adding points to `this.score`\n\t * are already implemented for every object you add.\n\t *\n\t * Add points to this group by using `this.points.create(x, y, key)`.\n\t * See `create()` for more information.\n\t */\n\tpublic points!: Phaser.Physics.Arcade.Group;\n\tpublic score!: number;\n\tprivate scoreText!: Phaser.GameObjects.Text;\n\n\t/**\n\t * A flag that is set to true if the game is currently running.\n\t *\n\t * This can be used in onUpdate to check whether the game is still running or not.\n\t */\n\tpublic gameRunning = false;\n\n\t/**\n\t * collectedGoal is true if the player collided with a object in staticGoals or dynamicGoals.\n\t */\n\tpublic collectedGoal = false;\n\n\t/**\n\t * Applies a random bounce to all members of a physics group.\n\t *\n\t * @param group physics group the bounce should be applied to\n\t */\n\tpublic static setRandomBounce(group: Phaser.Physics.Arcade.Group): void {\n\t\tgroup.children.iterate((c) => {\n\t\t\tconst child = (c as unknown) as Phaser.Physics.Arcade.Body;\n\t\t\tchild.setBounceY(Phaser.Math.FloatBetween(0.3, 0.5));\n\t\t});\n\t}\n\n\tconfig = {\n\t\ttype: Phaser.AUTO,\n\t\twidth: 800,\n\t\theight: 600,\n\t\tscale: {\n\t\t\tmode: Phaser.Scale.RESIZE\n\t\t},\n\t\tphysics: {\n\t\t\tdefault: \"arcade\",\n\t\t\tarcade: {\n\t\t\t\tgravity: { y: 300 },\n\t\t\t\tdebug: true\n\t\t\t}\n\t\t},\n\t\tparent: \"gameDestination\",\n\t\tscene: {\n\t\t\tpreload: this.preload,\n\t\t\tcreate: this.create,\n\t\t\tupdate: this.update\n\t\t}\n\t};\n\n\tpreload(): void {\n\t\t// Load character spritesheet-s\n\t\tloadCharacter.call(this);\n\n\t\tif (settings.onPreload) {\n\t\t\tsettings.onPreload.call(this);\n\t\t}\n\t}\n\n\tcreate(): void {\n\t\tthis.variables = new Map();\n\t\tif (settings.preCreate) {\n\t\t\tsettings.preCreate.call(this);\n\t\t}\n\n\t\t// check if a cameraRide is requested\n\t\tif (settings.cameraRide) {\n\t\t\tcameraRide = true;\n\n\t\t\t// Add the origin to the end of the cameraRide\n\t\t\tsettings.cameraRide.push({\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\twait: 0\n\t\t\t});\n\t\t}\n\n\t\t// restart the scene after a fade out\n\t\tthis.cameras.main.on(\n\t\t\t\"camerafadeoutcomplete\",\n\t\t\t() => {\n\t\t\t\tthis.scene.restart();\n\t\t\t},\n\t\t\tthis\n\t\t);\n\n\t\tthis.physics.world.bounds.setSize(settings.gameWorld.width, settings.gameWorld.height);\n\t\tthis.cameras.main.setBounds(0, 0, settings.gameWorld.width, settings.gameWorld.height);\n\n\t\t// Load the start, restart and camera buttons\n\t\tloadExternalButtons.call(this);\n\n\t\tthis.cursors = this.input.keyboard.createCursorKeys();\n\n\t\t// Add platforms / ground\n\t\tthis.platforms = this.physics.add.staticGroup();\n\n\t\t// Add player\n\t\tif (settings.characterSpawnXY) {\n\t\t\tthis.player = this.physics.add.sprite(\n\t\t\t\tsettings.characterSpawnXY.x,\n\t\t\t\tsettings.characterSpawnXY.y,\n\t\t\t\t\"characterWalk\",\n\t\t\t\t0\n\t\t\t);\n\t\t} else {\n\t\t\tthis.player = this.physics.add.sprite(100, 450, \"WalkAdjusted\", 0);\n\t\t}\n\t\tthis.player.setBounce(0.15);\n\t\t// this.player.setScale(2.7);\n\t\tthis.player.setCollideWorldBounds(true);\n\t\tthis.physics.add.collider(this.player, this.platforms);\n\n\t\t// this.cameras.main.startFollow(this.player, true);\n\n\t\t// Load character animations\n\t\tloadCharacterAnimations.call(this);\n\n\t\t// Add points\n\t\tthis.points = this.physics.add.group();\n\t\tthis.physics.add.collider(this.points, this.platforms);\n\n\t\t// collect points\n\t\tthis.score = 0;\n\t\tthis.physics.add.overlap(\n\t\t\tthis.player,\n\t\t\tthis.points,\n\t\t\t(player: Phaser.GameObjects.GameObject, point: Phaser.GameObjects.GameObject) => {\n\t\t\t\tconsole.log(\"collectPoint()\");\n\t\t\t\tconst p = point as Phaser.Physics.Arcade.Image;\n\t\t\t\tp.disableBody(true, true);\n\t\t\t\tthis.score++;\n\t\t\t\tthis.scoreText.setText(\"Score: \" + this.score);\n\t\t\t},\n\t\t\tundefined,\n\t\t\tthis\n\t\t);\n\n\t\t// Add static traps\n\t\tthis.staticTraps = this.physics.add.staticGroup();\n\t\tthis.physics.add.overlap(this.player, this.staticTraps, collideWithTrap, undefined, this);\n\n\t\t// Add dynamic traps\n\t\tthis.dynamicTraps = this.physics.add.group();\n\t\tthis.physics.add.overlap(this.player, this.dynamicTraps, collideWithTrap, undefined, this);\n\t\tthis.physics.add.collider(this.dynamicTraps, this.platforms);\n\n\t\t// Add static goals\n\t\tthis.staticGoals = this.physics.add.staticGroup();\n\t\tthis.physics.add.overlap(this.player, this.staticGoals, collectGoal, undefined, this);\n\n\t\t// Add dynamic goals\n\t\tthis.dynamicGoals = this.physics.add.group();\n\t\tthis.physics.add.overlap(this.player, this.dynamicGoals, collectGoal, undefined, this);\n\t\tthis.physics.add.collider(this.dynamicGoals, this.platforms);\n\n\t\t// score\n\t\tthis.scoreText = this.add.text(16, 16, \"Score: 0\", {\n\t\t\tfontSize: \"32px\",\n\t\t\tfill: \"#000\"\n\t\t});\n\n\t\tif (settings.afterCreate) {\n\t\t\tsettings.afterCreate.call(this);\n\t\t}\n\t}\n\n\tupdate(): void {\n\t\tif (cameraRide) {\n\t\t\tcameraRideFunc.call(this);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.gameRunning) {\n\t\t\tloadControls.call(this);\n\t\t} else {\n\t\t\t// Game is not yet started, stay idle\n\t\t\tthis.player.setVelocityX(0);\n\t\t\tthis.player.anims.play(\"idle\", true);\n\n\t\t\t// camera if game is not running\n\t\t\tif (moveCamRight || this.cursors.right?.isDown) {\n\t\t\t\tthis.cameras.main.scrollX += 5;\n\t\t\t} else if (moveCamLeft || this.cursors.left?.isDown) {\n\t\t\t\tthis.cameras.main.scrollX -= 5;\n\t\t\t}\n\n\t\t\tif (moveCamUp || this.cursors.up?.isDown) {\n\t\t\t\tthis.cameras.main.scrollY -= 5;\n\t\t\t} else if (moveCamDown || this.cursors.down?.isDown) {\n\t\t\t\tthis.cameras.main.scrollY += 5;\n\t\t\t}\n\t\t}\n\n\t\tif (settings.onUpdate) {\n\t\t\tsettings.onUpdate.call(this);\n\t\t}\n\t}\n\n\tgame = new Phaser.Game(this.config);\n}\n\n/**\n * Executes the camera ride for a Game. Needs to be called from within the update function\n */\nconst cameraRideFunc = function cameraRideFunc(this: Game) {\n\tif (!settings.cameraRide) {\n\t\treturn;\n\t}\n\n\tif (cameraRideIndex >= settings.cameraRide.length) {\n\t\t// Ends the camera ride\n\t\tcameraRide = false;\n\t\tconsole.log(\"%cFinished cameraRide\", \"color: green\");\n\t\treturn;\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t// @ts-ignore\n\tconst canvasWidth = document.getElementById(\"gameDestination\")?.firstChild.width;\n\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t// @ts-ignore\n\tconst canvasHeight = document.getElementById(\"gameDestination\")?.firstChild.height;\n\n\tconst xUnreachable: boolean =\n\t\tsettings.cameraRide[cameraRideIndex].x + canvasWidth > settings.gameWorld.width &&\n\t\tthis.cameras.main.scrollX + canvasWidth + 5 > settings.gameWorld.width;\n\n\tconst yUnreachable: boolean =\n\t\tsettings.cameraRide[cameraRideIndex].y + canvasHeight > settings.gameWorld.height &&\n\t\tthis.cameras.main.scrollY + canvasHeight + 5 > settings.gameWorld.height;\n\n\tconst xReached: boolean =\n\t\tMath.abs(settings.cameraRide[cameraRideIndex].x - this.cameras.main.scrollX) <= 5;\n\n\tconst yReached: boolean =\n\t\tMath.abs(settings.cameraRide[cameraRideIndex].y - this.cameras.main.scrollY) <= 5;\n\n\t// check if we reached the next x coordinate\n\tif ((xReached && yReached) || cameraWait > 0) {\n\t\tif (cameraWait === 0) {\n\t\t\t// set waiting time\n\t\t\tcameraWait = new Date().getTime() + settings.cameraRide[cameraRideIndex].wait;\n\t\t\treturn;\n\t\t}\n\n\t\tif (new Date().getTime() > cameraWait) {\n\t\t\t// waiting time over\n\t\t\tcameraWait = 0;\n\t\t\tcameraRideIndex++;\n\t\t}\n\t\treturn;\n\t}\n\n\t/*\n\t// Debug output\n\tconsole.log(\n\t\t\"x: \" + this.cameras.main.scrollX,\n\t\t\"y: \" + this.cameras.main.scrollY,\n\t\t\"width: \" + canvasWidth,\n\t\t\"index: \" + cameraRideIndex\n\t);\n\t*/\n\n\tlet error = false;\n\n\t// check if the current x value can be reached\n\tif (xUnreachable && (yReached || yUnreachable)) {\n\t\t// value unreachable because it is outside the game bounds\n\t\tconsole.log(\n\t\t\t\"%cWARNING:\\nThe x coordinate \" +\n\t\t\t\tsettings.cameraRide[cameraRideIndex].x +\n\t\t\t\t\" is outside of the game bounds.\\nMax x value with the current window size is: \" +\n\t\t\t\t(settings.gameWorld.width - canvasWidth) +\n\t\t\t\t\". This value depends on the size of the game canvas!\",\n\t\t\t\"color: orange\"\n\t\t);\n\t\terror = true;\n\t}\n\n\t// check if the current y value can be reached\n\tif (yUnreachable && (xReached || xUnreachable)) {\n\t\t// value unreachable because it is outside the game bounds\n\t\tconsole.log(\n\t\t\t\"%cWARNING:\\nThe y coordinate \" +\n\t\t\t\tsettings.cameraRide[cameraRideIndex].y +\n\t\t\t\t\" is outside of the game bounds.\\nMax y value size is: \" +\n\t\t\t\t(settings.gameWorld.height - canvasHeight),\n\t\t\t\"color: orange\"\n\t\t);\n\t\terror = true;\n\t}\n\n\tif (error) {\n\t\t// set waiting time\n\t\tcameraWait = new Date().getTime() + settings.cameraRide[cameraRideIndex].wait;\n\t\treturn;\n\t}\n\n\t// move along the x axis\n\tif (!xReached) {\n\t\tif (this.cameras.main.scrollX < settings.cameraRide[cameraRideIndex].x) {\n\t\t\tthis.cameras.main.scrollX += 3;\n\t\t} else if (this.cameras.main.scrollX > settings.cameraRide[cameraRideIndex].x) {\n\t\t\tthis.cameras.main.scrollX -= 3;\n\t\t}\n\t}\n\n\t// move along the y axis\n\tif (!yReached) {\n\t\tif (this.cameras.main.scrollY < settings.cameraRide[cameraRideIndex].y) {\n\t\t\tthis.cameras.main.scrollY += 3;\n\t\t} else if (this.cameras.main.scrollY > settings.cameraRide[cameraRideIndex].y) {\n\t\t\tthis.cameras.main.scrollY -= 3;\n\t\t}\n\t}\n};\n\n/**\n * loads all necessary sprite seeds for the selected character (in settings).\n *\n * Must be called in preload.\n *\n * For each character, this function provides the following spritesheet-s:\n * - \"characterIdle\"\n * - \"characterWalk\"\n * - TODO: more spritesheet-s\n */\nconst loadCharacter = function loadCharacter(this: Game) {\n\t// TODO select correct character using the character enum in settings (as soon as we have more than one character)\n\n\tthis.load.spritesheet(\"characterIdle\", \"assets/character/IdleAdjusted.png\", {\n\t\tframeWidth: 64,\n\t\tframeHeight: 100\n\t}); // 6 frames\n\n\tthis.load.spritesheet(\"characterWalk\", \"assets/character/WalkAdjusted.png\", {\n\t\tframeWidth: 64,\n\t\tframeHeight: 96\n\t}); // 8 frames\n};\n\n/**\n * Creates all necessary character animations.\n *\n * Must be called in create.\n *\n * For each character, this function provides the following animations:\n * - \"idle\"\n * - \"right\"\n * - TODO: more animations\n */\nconst loadCharacterAnimations = function loadCharacterAnimations(this: Game) {\n\t// TODO select correct character using the character enum in settings (as soon as we have more than one character)\n\n\tthis.anims.create({\n\t\tkey: \"idle\",\n\t\tframes: this.anims.generateFrameNumbers(\"characterIdle\", {\n\t\t\tstart: 0,\n\t\t\tend: 5\n\t\t}),\n\t\tframeRate: 5,\n\t\trepeat: -1\n\t});\n\n\tthis.anims.create({\n\t\tkey: \"right\",\n\t\tframes: this.anims.generateFrameNumbers(\"characterWalk\", {\n\t\t\tstart: 0,\n\t\t\tend: 7\n\t\t}),\n\t\tframeRate: 8,\n\t\trepeat: -1\n\t});\n};\n\n/**\n * Loads the in setting.controls defined controls.\n */\nconst loadControls = function loadControls(this: Game) {\n\t// TODO add more controls\n\n\tswitch (settings.controls) {\n\t\tcase controlType.t_v_graph: {\n\t\t\tt_v_controls.call(this, false);\n\t\t\tbreak;\n\t\t}\n\n\t\tcase controlType.t_v_graph_interpolated: {\n\t\t\tt_v_controls.call(this, true);\n\t\t\tbreak;\n\t\t}\n\n\t\t// Arrow keys control. Intended for debugging and development only\n\t\tcase controlType.arrowKeys: {\n\t\t\tif (this.cursors.left?.isDown) {\n\t\t\t\tthis.player.setVelocityX(-220);\n\t\t\t\tthis.player.anims.play(\"right\", true);\n\t\t\t} else if (this.cursors.right?.isDown) {\n\t\t\t\tthis.player.setVelocityX(220);\n\t\t\t\tthis.player.anims.play(\"right\", true);\n\t\t\t} else {\n\t\t\t\tthis.player.setVelocityX(0);\n\t\t\t\tthis.player.anims.play(\"idle\", true);\n\t\t\t}\n\n\t\t\tif (this.cursors.up?.isDown && this.player.body.touching.down) {\n\t\t\t\tthis.player.setVelocityY(-330);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Does not load any controls if settings.controls is \"none\"\n};\n\n/**\n * T-V-Graph Controls\n *\n * If interpolate is true, the current speed will depend on the current and next datapoint (linear interpolation).\n * If interpolate is false, the current speed will be the value of the current datapoint.\n * After one second the current datapoint will be set to the next datapoint.\n */\nconst t_v_controls = function t_v_controls(this: Game, interpolate: boolean): void {\n\tif (!this.gameRunning) {\n\t\treturn;\n\t}\n\n\tif (timeStamp == undefined) {\n\t\ttimeStamp = new Date().getTime();\n\t}\n\n\t// Increase index every second\n\tconst time = new Date().getTime();\n\tconst timeDiff = time - timeStamp;\n\tif (timeDiff > 1000) {\n\t\tindex++;\n\t\ttimeStamp = time;\n\n\t\t// end the game if all datapoints are processed\n\t\tif (index >= inputDataCopy.length - 1) {\n\t\t\tthis.player.setVelocityX(0);\n\t\t\tthis.player.anims.play(\"idle\", true);\n\n\t\t\t// End the game by calling the function passed in from GameComponent\n\t\t\tgraphProgress(index + 0.01);\n\t\t\tendGame.call(this);\n\t\t\tthis.gameRunning = false;\n\n\t\t\treturn;\n\t\t}\n\t}\n\n\tlet speed;\n\tlet progress = 0;\n\tif (!interpolate) {\n\t\tspeed = inputDataCopy[index].y;\n\t} else {\n\t\tprogress = timeDiff / 1000;\n\t\tspeed =\n\t\t\tinputDataCopy[index].y +\n\t\t\tprogress * (inputDataCopy[index + 1].y - inputDataCopy[index].y);\n\t}\n\tspeed *= 30;\n\n\t// set progress in graph\n\tgraphProgress(index + progress);\n\n\t// Debug output\n\t// console.log(\"inputDataCopy[\" + index + \"] = \" + inputDataCopy[index].y);\n\n\t// Set velocity of player\n\tthis.player.setVelocityX(speed);\n\n\t// play correct animation\n\tif (speed > 0) {\n\t\tthis.player.anims.play(\"right\", true);\n\t} else {\n\t\tthis.player.anims.play(\"idle\", true);\n\t}\n};\n\n/**\n * Restarts the game\n */\nconst restartGame = function restartGame(this: Game): void {\n\tif (settings.cameraRide) {\n\t\tsetTimeout(function () {\n\t\t\tcameraRide = true;\n\t\t\tcameraRideIndex = 0;\n\t\t\tcameraWait = 0;\n\t\t}, 2000);\n\t}\n\tgraphProgress(0);\n\tthis.gameRunning = false;\n\tindex = 0;\n\tthis.cameras.main.fade(2000, 255, 255, 255);\n};\n\n/**\n * Ends The game and evaluates the result\n */\nconst endGame = function endGame(this: Game): void {\n\tif (this.gameRunning) {\n\t\tthis.gameRunning = false;\n\t\tthis.player.setVelocityX(0);\n\t\tthis.player.anims.play(\"idle\", true);\n\n\t\tgameEndModal(this.collectedGoal, false, this.score, restartGame.bind(this));\n\t}\n};\n\n/**\n * This function gets called when the player collides with a trap.\n */\nconst collideWithTrap = function collideWithTrap(\n\tthis: Game,\n\tplayer: Phaser.GameObjects.GameObject,\n\ttrap: Phaser.GameObjects.GameObject\n) {\n\tif (this.gameRunning) {\n\t\tthis.gameRunning = false;\n\t\tthis.player.setVelocityX(0);\n\t\tthis.player.anims.play(\"idle\", true);\n\n\t\tgameEndModal(this.collectedGoal, true, this.score, restartGame.bind(this));\n\t}\n};\n\n/**\n * Starts the game\n */\nconst startGame = function startGame(this: Game) {\n\t// check if game is already running\n\tif (this.gameRunning) {\n\t\treturn;\n\t}\n\n\t// Stop cameraRide\n\tcameraRide = false;\n\n\t// Clone the array and the objects within\n\tinputDataCopy = [];\n\tfor (let i = 0; i < inputData.length; i++) {\n\t\tinputDataCopy.push({ y: inputData[i].y });\n\t}\n\n\t// Start game\n\tthis.gameRunning = true;\n\tthis.cameras.main.startFollow(this.player, true);\n\ttimeStamp = new Date().getTime();\n\n\tif (settings.onStart) {\n\t\tsettings.onStart.call(this);\n\t}\n};\n\n/**\n * Gets called when the player collides with a goal\n *\n * @param player the player\n * @param goal the goal the player collides with\n */\nconst collectGoal = function collectGoal(\n\tthis: Game,\n\tplayer: Phaser.GameObjects.GameObject,\n\tgoal: Phaser.GameObjects.GameObject\n): void {\n\tthis.collectedGoal = true;\n\tconst g = goal as Phaser.Physics.Arcade.Image;\n\tg.setAlpha(0.5);\n};\n\n/**\n * Loads the logic for all external buttons\n */\nconst loadExternalButtons = function loadExternalButtons(this: Game) {\n\t// Add the restart scene button, if it exists\n\tconst restartBtn = document.getElementById(\"restartGameBtn\");\n\tif (restartBtn) {\n\t\trestartBtn.addEventListener(\"click\", () => {\n\t\t\trestartGame.call(this);\n\t\t});\n\t} else {\n\t\tconsole.log(\"%cERROR: restartGameBtn not found!\", \"color: red\");\n\t}\n\n\t// Add the start game button\n\tconst startBtn = document.getElementById(\"startGameBtn\");\n\tif (startBtn) {\n\t\tstartBtn.addEventListener(\"click\", () => {\n\t\t\tstartGame.call(this);\n\t\t});\n\t} else {\n\t\tconsole.log(\"%cERROR: startGameBtn not found!\", \"color: red\");\n\t}\n\n\t// Add camera buttons\n\taddEvents([\"mousedown\", \"touchstart\"], \"cameraRightBtn\", () => {\n\t\tcameraRide = false;\n\t\tmoveCamRight = true;\n\t});\n\n\taddEvents([\"mouseup\", \"touchend\"], \"cameraRightBtn\", () => {\n\t\tmoveCamRight = false;\n\t});\n\n\taddEvents([\"mousedown\", \"touchstart\"], \"cameraLeftBtn\", () => {\n\t\tcameraRide = false;\n\t\tmoveCamLeft = true;\n\t});\n\n\taddEvents([\"mouseup\", \"touchend\"], \"cameraLeftBtn\", () => {\n\t\tmoveCamLeft = false;\n\t});\n\n\taddEvents([\"mousedown\", \"touchstart\"], \"cameraUpBtn\", () => {\n\t\tcameraRide = false;\n\t\tmoveCamUp = true;\n\t});\n\n\taddEvents([\"mouseup\", \"touchend\"], \"cameraUpBtn\", () => {\n\t\tmoveCamUp = false;\n\t});\n\n\taddEvents([\"mousedown\", \"touchstart\"], \"cameraDownBtn\", () => {\n\t\tcameraRide = false;\n\t\tmoveCamDown = true;\n\t});\n\n\taddEvents([\"mouseup\", \"touchend\"], \"cameraDownBtn\", () => {\n\t\tmoveCamDown = false;\n\t});\n\n\t// Adds the given function for all given events to the element with the given id\n\tfunction addEvents(events: string[], buttonId: string, action: () => void): void {\n\t\tconst btn = document.getElementById(buttonId);\n\t\tif (btn) {\n\t\t\tevents.forEach((event) => {\n\t\t\t\tbtn.addEventListener(event, action);\n\t\t\t});\n\t\t} else {\n\t\t\tconsole.log(\"%cERROR: \" + buttonId + \" not found!\", \"color: red\");\n\t\t}\n\t}\n};\n","/*\n * About this file:\n * This userdata utility file contains necessary method to save, update and load all saved userdata, like purchased items (TODO) or progress in specific Quests or Quizzes.\n *\n * Relevant exports:\n * - Task: internal representation of quests and quizzes\n * - saveTaskProgress() & loadTaskProgress()\n * - resetUserdata()\n */\n\n/**\n * A task can be either a quest or quiz.\n * It is used to save user progress.\n */\nexport default interface Task {\n\ttype: \"quest\" | \"quiz\";\n\tid: string; // MUST be unique!\n\ttitle: string;\n\twon: boolean;\n\tachievedPoints: number;\n\tpossiblePoints: number;\n}\n\n/** Internal representation of userdata. Will later on include other thinks, like purchased items etc. */\ninterface Userdata {\n\ttasks: Task[];\n\tpurchasedItems: {\n\t\tname: string;\n\t\tcost: number;\n\t}[];\n\tuserInput?: number[];\n}\n\n/**\n * Updates or saves the given task\n * @param task new or updated task\n * @returns false if the given task is invalid or if there was an error while saving, else true.\n */\nexport function saveTaskProgress(task: Task): boolean {\n\tif (!validTask) {\n\t\tconsole.log(\"%cERROR: cannot save invalid task\", \"color: red\");\n\t\treturn false;\n\t}\n\t// Save on server if possible\n\n\t// TODO\n\n\t// else, save local\n\tsaveUserdataLocal(task);\n\treturn true;\n}\n\n/**\n * Loads the task with the given `id`\n * @param id id of task to load\n * @returns undefined if there is no task with the given id. Otherwise it returns the Task with the given id\n */\nexport function loadTaskProgress(id: string): Task | undefined {\n\t// Load from server if possible\n\n\t// TODO\n\n\t// else, load from local storage\n\tconst userdata = loadUserdataLocal();\n\tconst index = find(id, userdata.tasks);\n\tif (index !== -1) {\n\t\treturn userdata.tasks[index];\n\t}\n\treturn undefined;\n}\n\n/**\n * Deletes all userdata. Use with caution!\n */\nexport function resetUserdata(): void {\n\tif (confirm(\"Fortschritt und Nutzerdaten löschen?\")) {\n\t\tlocalStorage.removeItem(\"userdata\");\n\t}\n}\n\n/**\n * Saves / updates a __valid__ task in local storage\n * @param task task to be saved or updated. Must be validated beforehand using `validTask()`.\n */\nfunction saveUserdataLocal(task: Task): void {\n\tconst oldUserdata = loadUserdataLocal();\n\tconst index = find(task.id, oldUserdata.tasks);\n\tif (index !== -1) {\n\t\toldUserdata.tasks[index] = task;\n\t} else {\n\t\toldUserdata.tasks.push(task);\n\t}\n\n\tlocalStorage.userdata = JSON.stringify(oldUserdata);\n}\n\n/**\n * Loads userdata from local storage.\n * If none is saved it will return an empty userdata object\n */\nfunction loadUserdataLocal(): Userdata {\n\tif (localStorage.userdata) {\n\t\treturn JSON.parse(localStorage.userdata);\n\t}\n\n\treturn {\n\t\ttasks: [],\n\t\tpurchasedItems: []\n\t};\n}\n\n/**\n * Finds the index of the task with the given title\n * @param id id to search for\n * @param tasks array of tasks to search in\n * @returns index in `tasks` of the tasks with the given `id`, if it exists. If it does not exist it will return -1.\n */\nfunction find(id: string, tasks: Task[]): number {\n\tfor (let i = 0; i < tasks.length; i++) {\n\t\tif (tasks[i].id === id) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Checks if the given task is a valid task\n * @param task task to be checked\n * @returns true if the given task is valid, else false\n */\nfunction validTask(task: Task): boolean {\n\treturn task.title !== \"\" && task.achievedPoints >= 0 && task.possiblePoints >= 0;\n}\n","import React, { ReactElement, useEffect, useState } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport Game from \"../gameLogic/game\";\nimport { GameConfig } from \"../gameLogic/GameConfig\";\nimport { Redirect } from \"react-router-dom\";\nimport { saveTaskProgress, loadTaskProgress } from \"../userdata\";\n\n// Information about the Error: https://github.com/react-bootstrap/react-bootstrap/issues/5075\n\nexport default class GameComponent extends React.Component<\n\t{\n\t\tsettings: GameConfig;\n\t\tdata: { y: number }[];\n\t\tsetGraphProgress: (x: number) => void;\n\t\ttitle: string;\n\t\tid: string;\n\t\tnextPage: string;\n\t},\n\t{\n\t\tshowModal: boolean;\n\t\trestart: undefined | (() => void);\n\t\ttitle: string;\n\t\ttext: string;\n\t\tredirect: string | null;\n\t\tnextBtnCSS: \"none\" | \"inline-block\";\n\t\tretryBtnVariant: \"primary\" | \"outline-primary\";\n\t}\n> {\n\tconstructor(props: {\n\t\tsettings: GameConfig;\n\t\tdata: { y: number }[];\n\t\tsetGraphProgress: (x: number) => void;\n\t\ttitle: string;\n\t\tid: string;\n\t\tnextPage: string;\n\t}) {\n\t\tsuper(props);\n\t\t// check if this game was already won once\n\t\tconst task = loadTaskProgress(props.id);\n\t\tif (task && task.won) {\n\t\t\tthis.state = {\n\t\t\t\tshowModal: true,\n\t\t\t\trestart: () => {\n\t\t\t\t\tthis.setState({ showModal: false });\n\t\t\t\t},\n\t\t\t\ttitle: \"Aufgabe bereits geschafft\",\n\t\t\t\ttext:\n\t\t\t\t\t\"Sieht so aus als hättest du diese Aufgabe bereits geschafft. Willst du sie trotzdem nochmal versuchen?\",\n\t\t\t\tredirect: null,\n\t\t\t\tnextBtnCSS: \"inline-block\",\n\t\t\t\tretryBtnVariant: \"outline-primary\"\n\t\t\t};\n\t\t} else {\n\t\t\tthis.state = {\n\t\t\t\tshowModal: false,\n\t\t\t\trestart: undefined,\n\t\t\t\ttitle: \"\",\n\t\t\t\ttext: \"\",\n\t\t\t\tredirect: null,\n\t\t\t\tnextBtnCSS: \"none\",\n\t\t\t\tretryBtnVariant: \"outline-primary\"\n\t\t\t};\n\t\t}\n\t}\n\n\tpublic gameEnded = (goal: boolean, trap: boolean, score: number, restart: () => void): void => {\n\t\tthis.setState({ restart: restart });\n\n\t\tlet won = false;\n\t\tif (trap) {\n\t\t\tthis.setState({\n\t\t\t\tshowModal: true,\n\t\t\t\tnextBtnCSS: \"none\",\n\t\t\t\tretryBtnVariant: \"primary\",\n\t\t\t\ttitle: \"Aufgabe fehlgeschlagen\",\n\t\t\t\ttext:\n\t\t\t\t\t\"Pass auf, du bist in eine Falle getreten! Versuch das nächste mal nicht mit der Falle in berührung zu kommen.\"\n\t\t\t});\n\t\t} else if (\n\t\t\t(this.props.settings.pointsToWin && score >= this.props.settings.pointsToWin) ||\n\t\t\tgoal\n\t\t) {\n\t\t\twon = true;\n\t\t\tconsole.log(\"Won\");\n\t\t\tthis.setState({\n\t\t\t\tshowModal: true,\n\t\t\t\tnextBtnCSS: \"inline-block\",\n\t\t\t\tretryBtnVariant: \"outline-primary\",\n\t\t\t\ttitle: \"Aufgabe erfolgreich abgeschlossen\",\n\t\t\t\ttext:\n\t\t\t\t\t\"Gratuliere, du hast die Aufgabe erfolgreich mit \" +\n\t\t\t\t\tscore +\n\t\t\t\t\t\" Punkten  abgeschlossen\"\n\t\t\t});\n\t\t} else {\n\t\t\tconsole.log(\"Lost\");\n\t\t\tthis.setState({\n\t\t\t\tshowModal: true,\n\t\t\t\tnextBtnCSS: \"none\",\n\t\t\t\tretryBtnVariant: \"primary\",\n\t\t\t\ttitle: \"Aufgabe fehlgeschlagen\",\n\t\t\t\ttext: \"Schade, vielleicht klappt es ja beim nächsten Versuch\"\n\t\t\t});\n\t\t}\n\n\t\t// Save as task\n\t\tsaveTaskProgress({\n\t\t\ttype: \"quest\",\n\t\t\tid: this.props.id,\n\t\t\ttitle: this.props.title,\n\t\t\twon: won,\n\t\t\tachievedPoints: score,\n\t\t\tpossiblePoints: 0 //TODO\n\t\t});\n\n\t\tconsole.log(\"btn: \" + this.state.nextBtnCSS);\n\t};\n\n\t/**\n\t * Closes the modal\n\t */\n\tprivate handleClose = () => {\n\t\tthis.setState({ showModal: false });\n\t};\n\n\t/**\n\t * Restart the game\n\t */\n\tprivate handleRestart = () => {\n\t\tthis.setState({ showModal: false });\n\t\tif (this.state.restart) {\n\t\t\tthis.state.restart();\n\t\t} else {\n\t\t\tconsole.log(\"%cERROR: restart function is not defined\", \"color: red\");\n\t\t}\n\t};\n\n\t/**\n\t * Go to the next Page\n\t */\n\tprivate handleNext = () => {\n\t\tthis.setState({ showModal: false, redirect: this.props.nextPage });\n\t};\n\n\tcomponentDidMount(): void {\n\t\tnew Game(\n\t\t\tthis.props.settings,\n\t\t\tthis.props.data,\n\t\t\tthis.gameEnded.bind(this),\n\t\t\tthis.props.setGraphProgress\n\t\t);\n\t}\n\n\trender(): ReactElement {\n\t\tif (this.state.redirect) {\n\t\t\treturn <Redirect to={this.state.redirect} />;\n\t\t}\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Modal\n\t\t\t\t\tshow={this.state.showModal}\n\t\t\t\t\tonHide={this.handleClose}\n\t\t\t\t\tcentered\n\t\t\t\t\tkeyboard={false}\n\t\t\t\t>\n\t\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t\t<Modal.Title>{this.state.title}</Modal.Title>\n\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t<Modal.Body>{this.state.text}</Modal.Body>\n\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant={this.state.retryBtnVariant}\n\t\t\t\t\t\t\tid=\"restartGameBtnModal\"\n\t\t\t\t\t\t\tonClick={this.handleRestart}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tNochmal versuchen\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tstyle={{ display: this.state.nextBtnCSS }}\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\tonClick={this.handleNext}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tN&auml;chste Aufgabe\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Modal.Footer>\n\t\t\t\t</Modal>\n\t\t\t\t<div id=\"gameDestination\"></div>\n\t\t\t</>\n\t\t);\n\t}\n}\n","import React, { ReactElement, RefObject } from \"react\";\nimport Highcharts, { Chart, SeriesOptionsType } from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport HC_more from \"highcharts/highcharts-more\";\nHC_more(Highcharts);\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nrequire(\"highcharts/modules/draggable-points\")(Highcharts);\n\nexport interface GraphInputConfig {\n\ttitle?: string;\n\txTitle: string;\n\tyTitle: string;\n\tminY: number;\n\tmaxY: number;\n\tdata: Array<{ y: number }>;\n}\n\nexport default class GraphInput extends React.Component<\n\t{ cfg: GraphInputConfig },\n\t{ options: Highcharts.Options }\n> {\n\tprivate internalChart!: Chart;\n\n\tprivate options: Highcharts.Options = {\n\t\ttitle: {\n\t\t\ttext: this.props.cfg.title\n\t\t},\n\t\tyAxis: {\n\t\t\ttitle: {\n\t\t\t\ttext: this.props.cfg.yTitle\n\t\t\t},\n\t\t\tmin: this.props.cfg.minY,\n\t\t\tmax: this.props.cfg.maxY\n\t\t},\n\t\txAxis: {\n\t\t\ttitle: {\n\t\t\t\ttext: this.props.cfg.xTitle\n\t\t\t}\n\t\t},\n\t\ttooltip: {\n\t\t\tformatter: function () {\n\t\t\t\treturn this.y.toFixed(1);\n\t\t\t}\n\t\t},\n\t\tseries: [\n\t\t\t{\n\t\t\t\ttype: \"line\",\n\t\t\t\tdragDrop: {\n\t\t\t\t\tdraggableY: true,\n\t\t\t\t\tdragPrecisionY: 0.1,\n\t\t\t\t\tdragMaxY: this.props.cfg.maxY,\n\t\t\t\t\tdragMinY: this.props.cfg.minY\n\t\t\t\t},\n\t\t\t\tshowInLegend: false,\n\t\t\t\tdata: this.props.cfg.data,\n\t\t\t\tzoneAxis: \"x\",\n\t\t\t\tzones: [{ value: 0 }, { value: 0, color: \"red\" }]\n\t\t\t}\n\t\t]\n\t};\n\n\tcolorGraphUpToX(x: number): void {\n\t\tconst series = this.options.series;\n\t\tif (series && series[0]) {\n\t\t\t// here should be some highcharts type, but it's not avaiable\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\t(series[0] as any).zones[1].value = x;\n\t\t\tthis.internalChart.update(this.options);\n\t\t}\n\t}\n\n\tafterChartCreated(chart: Chart): void {\n\t\tthis.internalChart = chart;\n\t}\n\n\trender(): ReactElement {\n\t\treturn (\n\t\t\t<HighchartsReact\n\t\t\t\tconstructorType={\"chart\"}\n\t\t\t\tcallback={this.afterChartCreated.bind(this)}\n\t\t\t\thighcharts={Highcharts}\n\t\t\t\toptions={this.options}\n\t\t\t/>\n\t\t);\n\t}\n}\n","import React, { ReactElement, useState } from \"react\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport { GameConfig } from \"../gameLogic/GameConfig\";\nimport GameComponent from \"./GameComponent\";\nimport GraphInput, { GraphInputConfig } from \"./GraphInput\";\nimport \"./../css/style.quest.css\";\n\nexport interface QuestConfig {\n\ttitle: string;\n\tid: string;\n\tdescription: string;\n\tgame: GameConfig;\n\tgraph: GraphInputConfig;\n}\n\nexport default function Quest(props: { config: QuestConfig; nextPage: string }): ReactElement {\n\tconst graphInputRef = React.createRef<GraphInput>();\n\tconst graphInputComponent = (\n\t\t<GraphInput cfg={props.config.graph} ref={graphInputRef}></GraphInput>\n\t);\n\n\tfunction setColorUpToX(x: number): void {\n\t\tgraphInputRef?.current?.colorGraphUpToX(x);\n\t}\n\n\treturn (\n\t\t<Container fluid>\n\t\t\t<Row className=\"mx-auto mt-1 boxWrapper\">\n\t\t\t\t<Col sm=\"12\" md=\"6\">\n\t\t\t\t\t<h2 className=\"text-left title\">{props.config.title}</h2>\n\t\t\t\t\t<p className=\"text-left\">{props.config.description}</p>\n\t\t\t\t\t<div className=\"pt-3\">{graphInputComponent}</div>\n\t\t\t\t</Col>\n\t\t\t\t<Col sm=\"12\" md=\"6\">\n\t\t\t\t\t<GameComponent\n\t\t\t\t\t\tsettings={props.config.game}\n\t\t\t\t\t\ttitle={props.config.title}\n\t\t\t\t\t\tid={props.config.id}\n\t\t\t\t\t\tdata={props.config.graph.data}\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\t\tsetGraphProgress={setColorUpToX}\n\t\t\t\t\t\tnextPage={props.nextPage}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"btnWrapper\">\n\t\t\t\t\t\t<div className=\"btnWrapperLeft\">\n\t\t\t\t\t\t\t<Button variant=\"primary\" id=\"startGameBtn\" className=\"px-3 mr-1\">\n\t\t\t\t\t\t\t\tSpiel&nbsp;starten\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button variant=\"primary\" id=\"restartGameBtn\" className=\"px-3 mx-1\">\n\t\t\t\t\t\t\t\tNochmal&nbsp;versuchen\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"btnWrapperRight\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t\tid=\"cameraLeftBtn\"\n\t\t\t\t\t\t\t\tclassName=\"px-3 arrowKey my-1\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i className=\"arrowLeft\"></i>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<div className=\"arrowKeysVertical\">\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t\t\tid=\"cameraUpBtn\"\n\t\t\t\t\t\t\t\t\tclassName=\"px-3 arrowKey\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<i className=\"arrowUp\"></i>\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t\t\tid=\"cameraDownBtn\"\n\t\t\t\t\t\t\t\t\tclassName=\"px-3 arrowKey\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<i className=\"arrowDown\"></i>\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t\tid=\"cameraRightBtn\"\n\t\t\t\t\t\t\t\tclassName=\"px-3 arrowKey my-1\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i className=\"arrowRight\"></i>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n}\n","import React, { ReactElement } from \"react\";\nimport { Carousel } from \"react-bootstrap\";\n\nexport default function Tutorial(): ReactElement {\n\treturn (\n\t\t<Carousel>\n\t\t\t<Carousel.Item color=\"black\">\n\t\t\t\t<img className=\"d-block w-100\" src=\"pergament.jpg\" alt=\"First slide\" />\n\t\t\t\t<Carousel.Caption style={{ top: \"40px\" }}>\n\t\t\t\t\t<h1>Kinematik und Dynamik geradliniger Bewegung</h1>\n\t\t\t\t</Carousel.Caption>\n\t\t\t</Carousel.Item>\n\t\t\t<Carousel.Item>\n\t\t\t\t<img className=\"d-block w-100\" src=\"pergament.jpg\" alt=\"Second slide\" />\n\t\t\t\t<Carousel.Caption style={{ top: \"40px\" }}>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tGeschwindigkeit: v = zurückgelegter Weg/ dafür benötigte Zeit = delta x/\n\t\t\t\t\t\tdelta t\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>Einheit: [v] = 1m/s = 3,6 km/h</p>\n\t\t\t\t</Carousel.Caption>\n\t\t\t</Carousel.Item>\n\t\t\t<Carousel.Item>\n\t\t\t\t<img className=\"d-block w-100\" src=\"pergament.jpg\" alt=\"Third slide\" />\n\t\t\t\t<Carousel.Caption style={{ top: \"40px\" }}>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tBeschleunigung: a = Geschwindigkeitsänderung/ dafür benötigte Zeit = delta\n\t\t\t\t\t\tv/ delta t\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>Einheit: [a] = 1m/s^2</p>\n\t\t\t\t</Carousel.Caption>\n\t\t\t</Carousel.Item>\n\t\t</Carousel>\n\t);\n}\n","import React, { ReactElement } from \"react\";\nimport { Button, Card, Badge, CardDeck } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nexport function LevelOverviewBar(props: { config: LevelOverviewCardConfig[] }): ReactElement {\n\treturn (\n\t\t<CardDeck className=\"justify-content-center\">\n\t\t\t{props.config.map((e, idx) => LevelOverviewCard({ config: e, idx: idx }))}\n\t\t</CardDeck>\n\t);\n}\n\nexport interface LevelOverviewCardConfig {\n\ttitle: string;\n\tbadge: BadgeType;\n\ttext: string;\n\tbuttonLink: string;\n\tbuttonName: string;\n}\n\nexport enum BadgeType {\n\tTHEORIE,\n\tSPIEL,\n\tQUIZ,\n\tERKLÄRUNG\n}\n\nfunction getCode(type: BadgeType): ReactElement {\n\tif (type === BadgeType.THEORIE) {\n\t\treturn <Badge className=\"badgeTheory\">&#128161; Theorie</Badge>;\n\t} else if (type === BadgeType.SPIEL) {\n\t\treturn <Badge className=\"badgeGame\">&#x1F3AE; Spiel</Badge>;\n\t} else if (type === BadgeType.QUIZ) {\n\t\treturn <Badge className=\"badgeQuiz\">&#x1F914; Quiz</Badge>;\n\t} else return <></>;\n}\n\nexport function LevelOverviewCard(props: {\n\tconfig: LevelOverviewCardConfig;\n\tidx: number;\n}): ReactElement {\n\treturn (\n\t\t<Card className=\"overviewCard\" key={props.idx.toString()}>\n\t\t\t<Card.Body>\n\t\t\t\t<Card.Title>{props.config.title}</Card.Title>\n\t\t\t\t<Card.Subtitle>{getCode(props.config.badge)}</Card.Subtitle>\n\t\t\t\t<br />\n\t\t\t\t<Card.Text>{props.config.text}</Card.Text>\n\t\t\t</Card.Body>\n\t\t\t<Card.Footer>\n\t\t\t\t<Link to={props.config.buttonLink}>\n\t\t\t\t\t<Button>{props.config.buttonName}</Button>\n\t\t\t\t</Link>\n\t\t\t</Card.Footer>\n\t\t</Card>\n\t);\n}\n","import React, { ReactElement } from \"react\";\nimport { Container, Card, Nav, Tab } from \"react-bootstrap\";\nimport { BadgeType, LevelOverviewBar, LevelOverviewCardConfig } from \"./LevelOverviewElements\";\n\nconst barConfigTutorial: Array<LevelOverviewCardConfig> = [\n\t{\n\t\ttitle: \"Tutorial\",\n\t\tbadge: BadgeType.THEORIE,\n\t\ttext: \"hier lernst du worum es geht\",\n\t\tbuttonLink: \"/Tutorial\",\n\t\tbuttonName: \"Learn\"\n\t}\n];\n\nconst barConfigExample: Array<LevelOverviewCardConfig> = [\n\t{\n\t\ttitle: \"Example Theory 1\",\n\t\tbadge: BadgeType.THEORIE,\n\t\ttext: \"hier kommt Input\",\n\t\tbuttonLink: \"/ExampleTheory1\",\n\t\tbuttonName: \"Read\"\n\t},\n\t{\n\t\ttitle: \"Example 1\",\n\t\tbadge: BadgeType.SPIEL,\n\t\ttext: \"mach mehr Sport.\",\n\t\tbuttonLink: \"/ExampleQuest1\",\n\t\tbuttonName: \"Play\"\n\t},\n\t{\n\t\ttitle: \"Example 2\",\n\t\tbadge: BadgeType.SPIEL,\n\t\ttext: \"mach mehr Sport.\",\n\t\tbuttonLink: \"/ExampleQuest2\",\n\t\tbuttonName: \"Play\"\n\t},\n\t{\n\t\ttitle: \"Example Quiz 1\",\n\t\tbadge: BadgeType.QUIZ,\n\t\ttext: \"strng dein Hirn an\",\n\t\tbuttonLink: \"/ExampleQuiz1\",\n\t\tbuttonName: \"Solve\"\n\t}\n];\n\nconst barConfig1: Array<LevelOverviewCardConfig> = [\n\t{\n\t\ttitle: \"tv-Diagramm\",\n\t\tbadge: BadgeType.THEORIE,\n\t\ttext: \"interessantes Zeug und so\",\n\t\tbuttonLink: \"/Tutorial\",\n\t\tbuttonName: \"Learn\"\n\t},\n\t{\n\t\ttitle: \"Quest 1 : Bewegung\",\n\t\tbadge: BadgeType.SPIEL,\n\t\ttext: \"hier steht text\",\n\t\tbuttonLink: \"/level1Quest1\",\n\t\tbuttonName: \"Play\"\n\t},\n\t{\n\t\ttitle: \"Quest 2 : Beschleunigung\",\n\t\tbadge: BadgeType.SPIEL,\n\t\ttext: \"hier steht text\",\n\t\tbuttonLink: \"/level1Quest2\",\n\t\tbuttonName: \"Play\"\n\t}\n];\n\nconst barConfig2: Array<LevelOverviewCardConfig> = [\n\t{\n\t\ttitle: \"Vorschau\",\n\t\tbadge: BadgeType.SPIEL,\n\t\ttext:\n\t\t\t\"In Level 2 wird der Spieler sich auf eine Stattereise begeben. Schau dir das Setting jetzt schon an!\",\n\t\tbuttonLink: \"/Level2Quest1\",\n\t\tbuttonName: \"Play\"\n\t}\n];\n\nexport default function LevelOverview(): ReactElement {\n\treturn (\n\t\t<Container fluid>\n\t\t\t<Tab.Container defaultActiveKey=\"tutorial\">\n\t\t\t\t<Nav justify className=\"overviewTab\" variant=\"pills\">\n\t\t\t\t\t<Nav.Link eventKey=\"tutorial\">Tutorial</Nav.Link>\n\t\t\t\t\t<Nav.Link eventKey=\"exampleLevel\">Example Level</Nav.Link>\n\t\t\t\t\t<Nav.Link eventKey=\"level1\">Level 1</Nav.Link>\n\t\t\t\t\t<Nav.Link eventKey=\"level2\">Level 2</Nav.Link>\n\t\t\t\t\t<Nav.Link eventKey=\"disabled\" disabled>\n\t\t\t\t\t\tDisabled\n\t\t\t\t\t</Nav.Link>\n\t\t\t\t</Nav>\n\t\t\t\t<Tab.Content>\n\t\t\t\t\t<Tab.Pane eventKey=\"tutorial\">\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<Card.Body className=\"justify-content-center\">\n\t\t\t\t\t\t\t\t<h1 className=\"text-center\">Tutorial</h1>\n\t\t\t\t\t\t\t\t<p className=\"text-center\">\n\t\t\t\t\t\t\t\t\tHier gibt es spannenden stuff zu lernen\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<LevelOverviewBar config={barConfigTutorial}></LevelOverviewBar>\n\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Tab.Pane>\n\t\t\t\t\t<Tab.Pane eventKey=\"exampleLevel\">\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<Card.Body className=\"justify-content-center\">\n\t\t\t\t\t\t\t\t<h1 className=\"text-center\">Example Level</h1>\n\t\t\t\t\t\t\t\t<p className=\"text-center\">Ein paar Beispiele für Level</p>\n\t\t\t\t\t\t\t\t<LevelOverviewBar config={barConfigExample}></LevelOverviewBar>\n\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Tab.Pane>\n\t\t\t\t\t<Tab.Pane eventKey=\"level1\">\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t<h1 className=\"text-center\">tv-Diagramm</h1>\n\t\t\t\t\t\t\t\t<p className=\"text-center\">\n\t\t\t\t\t\t\t\t\tNein, tv soll hier nicht television heißen.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<LevelOverviewBar config={barConfig1}></LevelOverviewBar>\n\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Tab.Pane>\n\t\t\t\t\t<Tab.Pane eventKey=\"level2\">\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t<h1 className=\"text-center\">Stattereise</h1>\n\t\t\t\t\t\t\t\t<p className=\"text-center\">\n\t\t\t\t\t\t\t\t\tIn Level 2 wird der Spieler sich auf eine Stattereise begeben.\n\t\t\t\t\t\t\t\t\tSchau dir das Setting jetzt schon an!\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<LevelOverviewBar config={barConfig2}></LevelOverviewBar>\n\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Tab.Pane>\n\t\t\t\t</Tab.Content>\n\t\t\t</Tab.Container>\n\t\t</Container>\n\t);\n}\n","import React, { ReactElement } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { resetUserdata } from \"../userdata\";\n\nexport default function Footer(): ReactElement {\n\treturn (\n\t\t<div className=\"footer\">\n\t\t\t<div className=\"footerLeft\">\n\t\t\t\t<p className=\"footerText\">&copy; copyright 2020</p>\n\t\t\t</div>\n\t\t\t<div className=\"footerRight\">\n\t\t\t\t<a onClick={resetUserdata} className=\"footerLink\">\n\t\t\t\t\tFortschritt zur&uuml;cksetzen\n\t\t\t\t</a>\n\t\t\t\t<Link to=\"/\" className=\"footerLink\">\n\t\t\t\t\tBug&nbsp;Melden\n\t\t\t\t</Link>\n\t\t\t\t<Link to=\"/\" className=\"footerLink\">\n\t\t\t\t\tFeedback\n\t\t\t\t</Link>\n\t\t\t\t<Link to=\"/\" className=\"footerLink\">\n\t\t\t\t\tTeam\n\t\t\t\t</Link>\n\t\t\t\t<Link to=\"/\" className=\"footerLink\">\n\t\t\t\t\tKontakt\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport { ReactElement } from \"react\";\nimport { Badge, Button, Card, Form, FormCheck, Image } from \"react-bootstrap\";\nimport { MultipleChoiceConfig, StatementConfig } from \"../components/MultipleChoiceQuestion\";\n\nexport function equal(array1: Array<boolean>, array2: Array<boolean>): boolean {\n\tif (array1.length == array2.length) {\n\t\tfor (let i = 0; i < array1.length; i++) {\n\t\t\tif (array1[i] != array2[i]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t} else return false;\n}\nexport class QuestionStatus {\n\tstatic Correct = (\n\t\t<div className=\"quizStatusBadgeBox\">\n\t\t\t<Badge variant=\"success\">Korrekt</Badge>\n\t\t</div>\n\t);\n\tstatic Wrong = (\n\t\t<div className=\"quizStatusBadgeBox\">\n\t\t\t<Badge variant=\"danger\">Falsch</Badge>\n\t\t</div>\n\t);\n\tstatic Unsolved = (\n\t\t<div className=\"quizStatusBadgeBox\">\n\t\t\t<Badge variant=\"info\">Ungelöst</Badge>\n\t\t</div>\n\t);\n}\n\nexport function getOptionalImageHeader(path: string | undefined): ReactElement {\n\tif (path === undefined) {\n\t\treturn <></>;\n\t} else {\n\t\treturn (\n\t\t\t<Card.Header>\n\t\t\t\t<Image src={path} fluid rounded />\n\t\t\t</Card.Header>\n\t\t);\n\t}\n}\n\nexport function getCorrectAnswerVector(\n\tconfig: MultipleChoiceConfig | StatementConfig\n): Array<boolean> {\n\tswitch (config.kind) {\n\t\tcase \"MultipleChoice\":\n\t\t\treturn config.statements.map((s) => s.isTrue);\n\t\tcase \"SingleChoice\":\n\t\t\treturn config.statements.map((s) => s.isTrue);\n\t\tcase \"Statement\":\n\t\t\treturn [config.isTrue, !config.isTrue];\n\t}\n}\n\nexport function getEmptyAnswerVector(\n\tconfig: MultipleChoiceConfig | StatementConfig\n): Array<boolean> {\n\tswitch (config.kind) {\n\t\tcase \"MultipleChoice\":\n\t\t\treturn config.statements.map((_) => false);\n\t\tcase \"SingleChoice\":\n\t\t\treturn config.statements.map((_) => false);\n\t\tcase \"Statement\":\n\t\t\treturn [false, false];\n\t}\n}\n\nexport function getAnswerBoxes(\n\tconfig: MultipleChoiceConfig | StatementConfig,\n\tquestionIdx: number,\n\tonSelect: (buttonNumber: number) => void\n): ReactElement {\n\tswitch (config.kind) {\n\t\tcase \"MultipleChoice\":\n\t\t\treturn getCheckboxes(config, questionIdx, onSelect);\n\t\tcase \"SingleChoice\":\n\t\t\treturn getRadioButtons(config, questionIdx, onSelect);\n\t\tcase \"Statement\":\n\t\t\treturn getBooleanRadioButtons(questionIdx, onSelect);\n\t}\n}\n\nfunction getCheckboxes(\n\tconfig: MultipleChoiceConfig,\n\tquestionIdx: number,\n\tonSelect: (buttonNumber: number) => void\n): ReactElement {\n\treturn (\n\t\t<>\n\t\t\t<Card.Subtitle className=\"mb-2 text-muted\">\n\t\t\t\tEs können beliebig viele Antworten richtig sein.\n\t\t\t</Card.Subtitle>\n\t\t\t<Form>\n\t\t\t\t<div key=\"default-radio\" className=\"mb-3\">\n\t\t\t\t\t{config.statements.map((e, idx) =>\n\t\t\t\t\t\tmapStatementToCheckbox(e, questionIdx, idx, onSelect)\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</Form>\n\t\t</>\n\t);\n}\n\nfunction mapStatementToCheckbox(\n\telementConfig: StatementConfig,\n\tquestionIdx: number,\n\tanswerIdx: number,\n\tonSelect: (buttonNumber: number) => void\n): ReactElement {\n\treturn (\n\t\t<FormCheck\n\t\t\ttype=\"checkbox\"\n\t\t\tid={questionIdx.toString() + \"-mc-\" + answerIdx.toString()}\n\t\t\tlabel={elementConfig.text}\n\t\t\tname=\"mcCheckbox\"\n\t\t\tonChange={() => onSelect(answerIdx)}\n\t\t/>\n\t);\n}\n\nfunction getRadioButtons(\n\tconfig: MultipleChoiceConfig,\n\tquestionIdx: number,\n\tonSelect: (buttonNumber: number) => void\n): ReactElement {\n\treturn (\n\t\t<>\n\t\t\t<Card.Subtitle className=\"mb-2 text-muted\">\n\t\t\t\tEs ist genau eine Antwort richtig.\n\t\t\t</Card.Subtitle>\n\t\t\t<Form>\n\t\t\t\t<div key=\"default-radio\" className=\"mb-3\">\n\t\t\t\t\t<fieldset>\n\t\t\t\t\t\t{config.statements.map((e, idx) =>\n\t\t\t\t\t\t\tmapStatementToButton(e, questionIdx, idx, onSelect)\n\t\t\t\t\t\t)}\n\t\t\t\t\t</fieldset>\n\t\t\t\t</div>\n\t\t\t</Form>\n\t\t</>\n\t);\n}\n\nfunction mapStatementToButton(\n\telementConfig: StatementConfig,\n\tquestionIdx: number,\n\tanswerIdx: number,\n\tonSelect: (buttonNumber: number) => void\n): ReactElement {\n\treturn (\n\t\t<FormCheck\n\t\t\ttype=\"radio\"\n\t\t\tid={questionIdx.toString() + \"-sc-\" + answerIdx.toString()}\n\t\t\tlabel={elementConfig.text}\n\t\t\tname=\"scRadioButton\"\n\t\t\tonChange={() => onSelect(answerIdx)}\n\t\t/>\n\t);\n}\n\nfunction getBooleanRadioButtons(\n\tquestionIdx: number,\n\tonSelect: (buttonNumber: number) => void\n): ReactElement {\n\treturn (\n\t\t<Form>\n\t\t\t<div key=\"default-radio\" className=\"mb-3\">\n\t\t\t\t<fieldset>\n\t\t\t\t\t<FormCheck\n\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\tid={questionIdx.toString() + \"-bool-true\"}\n\t\t\t\t\t\tlabel=\"Wahr\"\n\t\t\t\t\t\tname=\"trueFalseRadios\"\n\t\t\t\t\t\tonChange={() => onSelect(0)}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormCheck\n\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\tid={questionIdx.toString() + \"-bool-false\"}\n\t\t\t\t\t\tlabel=\"Falsch\"\n\t\t\t\t\t\tname=\"trueFalseRadios\"\n\t\t\t\t\t\tonChange={() => onSelect(1)}\n\t\t\t\t\t/>\n\t\t\t\t</fieldset>\n\t\t\t</div>\n\t\t</Form>\n\t);\n}\n\nexport function getSolveButton(onClickFkt: () => void, isEnabled = true): ReactElement {\n\treturn (\n\t\t<Button variant=\"success\" disabled={!isEnabled} onClick={onClickFkt}>\n\t\t\tLösen\n\t\t</Button>\n\t);\n}\n","import React, { ReactElement, useState } from \"react\";\nimport { Button, Card, Col, Row } from \"react-bootstrap\";\nimport { getSolveButton } from \"../questionLogic/questionUtility\";\nimport {\n\tequal,\n\tgetOptionalImageHeader,\n\tQuestionStatus,\n\tgetCorrectAnswerVector,\n\tgetEmptyAnswerVector,\n\tgetAnswerBoxes\n} from \"../questionLogic/questionUtility\";\n\nexport interface MultipleChoiceConfig {\n\tkind: \"MultipleChoice\" | \"SingleChoice\";\n\ttext: string;\n\tstatements: Array<StatementConfig>;\n\timgPath?: string;\n}\n\nexport interface StatementConfig {\n\tkind: \"Statement\";\n\ttext: string;\n\tisTrue: boolean;\n\timgPath?: string;\n}\n\nexport function MultipleChoiceQuestion(props: {\n\tconfig: MultipleChoiceConfig | StatementConfig;\n\tidx: number;\n}): ReactElement {\n\tconst [status, setStatus] = useState(QuestionStatus.Unsolved);\n\tconst [correctValues] = useState(getCorrectAnswerVector(props.config));\n\tconst [selected, setSelected] = useState(getEmptyAnswerVector(props.config));\n\tconst [answerBoxes] = useState(getAnswerBoxes(props.config, props.idx, select));\n\tconst [image] = useState(getOptionalImageHeader(props.config.imgPath));\n\tconst [solveButton, setSolveButton] = useState(getSolveButton(check));\n\n\tfunction select(idx: number) {\n\t\tconst old = selected.slice();\n\t\told[idx] = !old[idx];\n\t\tsetSelected(old);\n\t}\n\n\tfunction check(): void {\n\t\tif (status === QuestionStatus.Unsolved) {\n\t\t\tif (equal(selected, correctValues)) {\n\t\t\t\tsetStatus(QuestionStatus.Correct);\n\t\t\t} else {\n\t\t\t\tsetStatus(QuestionStatus.Wrong);\n\t\t\t}\n\t\t\tsetSolveButton(getSolveButton(check, false));\n\t\t}\n\t}\n\n\treturn (\n\t\t<Card className=\"questionBox\" key={props.idx.toString()}>\n\t\t\t{image}\n\t\t\t<Card.Body>\n\t\t\t\t<Card.Text>{props.config.text}</Card.Text>\n\t\t\t\t<br />\n\t\t\t\t<fieldset className=\"text-center\">{answerBoxes}</fieldset>\n\t\t\t</Card.Body>\n\t\t\t<Card.Footer>\n\t\t\t\t<Row className=\"text-center\">\n\t\t\t\t\t<Col></Col>\n\t\t\t\t\t<Col>{solveButton}</Col>\n\t\t\t\t\t<Col>{status}</Col>\n\t\t\t\t</Row>\n\t\t\t</Card.Footer>\n\t\t</Card>\n\t);\n}\n","import React, { ReactElement } from \"react\";\nimport { Col, Container } from \"react-bootstrap\";\nimport { Question, QuestionConfig } from \"./Question\";\n\nexport interface QuizConfig {\n\ttitle: string;\n\ttext: string;\n\tquestions: Array<QuestionConfig>;\n\tshuffleQuestions?: boolean;\n}\n\nexport function Quiz(props: { config: QuizConfig }): ReactElement {\n\treturn (\n\t\t<Container>\n\t\t\t<Col>\n\t\t\t\t<div className=\"quizPageTextBox\">\n\t\t\t\t\t<h1 className=\"text-center\">{props.config.title}</h1>\n\t\t\t\t\t<p>{props.config.text}</p>\n\t\t\t\t</div>\n\t\t\t\t{props.config.questions.map((e, idx) => Question({ config: e, idx: idx }))}\n\t\t\t</Col>\n\t\t</Container>\n\t);\n}\n","import React, { ReactElement } from \"react\";\nimport {\n\tMultipleChoiceConfig,\n\tMultipleChoiceQuestion,\n\tStatementConfig\n} from \"./MultipleChoiceQuestion\";\n\nexport type QuestionStatus = \"Unsolved\" | \"Correct\" | \"Wrong\";\n\nexport type QuestionConfig = MultipleChoiceConfig | StatementConfig;\n\nexport function Question(props: { config: QuestionConfig; idx: number }): ReactElement {\n\tfunction getQuestionCode(): ReactElement {\n\t\tswitch (props.config.kind) {\n\t\t\tcase \"SingleChoice\":\n\t\t\t\treturn MultipleChoiceQuestion({\n\t\t\t\t\tconfig: props.config as MultipleChoiceConfig,\n\t\t\t\t\tidx: props.idx\n\t\t\t\t});\n\t\t\tcase \"MultipleChoice\":\n\t\t\t\treturn MultipleChoiceQuestion({\n\t\t\t\t\tconfig: props.config as MultipleChoiceConfig,\n\t\t\t\t\tidx: props.idx\n\t\t\t\t});\n\t\t\tcase \"Statement\":\n\t\t\t\treturn MultipleChoiceQuestion({\n\t\t\t\t\tconfig: props.config as StatementConfig,\n\t\t\t\t\tidx: props.idx\n\t\t\t\t});\n\t\t}\n\t}\n\n\treturn <>{getQuestionCode()}</>;\n}\n","import React, { ReactElement, useState } from \"react\";\nimport { Card, Carousel, Col, Container, Image } from \"react-bootstrap\";\n\nexport interface SlideConfig {\n\timgPath?: string;\n\ttext?: string;\n}\n\nexport function Slide(props: { config: SlideConfig; idx: number }): ReactElement {\n\tconst [optionalCaptionBody] = useState(getOptionalCaption(props.config.text));\n\tconst [optionalImage] = useState(getOptionalImage(props.config.imgPath));\n\n\treturn (\n\t\t<Carousel.Item className=\"carouselSlide\" key={props.idx.toString()}>\n\t\t\t{optionalImage}\n\t\t\t{optionalCaptionBody}\n\t\t</Carousel.Item>\n\t);\n}\n\nfunction getOptionalCaption(text: string | undefined): ReactElement {\n\tif (text === undefined) {\n\t\treturn <></>;\n\t} else {\n\t\treturn (\n\t\t\t<div className=\"carouselSlideTextBox\">\n\t\t\t\t<p className=\"p-2\">{text}</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction getOptionalImage(path: string | undefined): ReactElement {\n\tif (path === undefined) {\n\t\treturn <></>;\n\t} else {\n\t\treturn (\n\t\t\t<div className=\"carouselSlideImageBox\">\n\t\t\t\t<Image src={path} fluid rounded className=\"d-block w-100\" />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport interface TheoryConfig {\n\tslides: Array<SlideConfig>;\n}\n\nexport function Theory(props: { config: TheoryConfig }): ReactElement {\n\treturn (\n\t\t<Container className=\"theoryContainer\">\n\t\t\t<Col>\n\t\t\t\t<Carousel interval={null}>\n\t\t\t\t\t{props.config.slides.map((c, idx) => Slide({ config: c, idx: idx }))}\n\t\t\t\t</Carousel>\n\t\t\t</Col>\n\t\t</Container>\n\t);\n}\n","export default function convertDataArray(array: Array<number>): Array<{ y: number }> {\n\tconst ret = [];\n\tfor (let i = 0; i < array.length; i++) {\n\t\tret.push({ y: array[i] });\n\t}\n\treturn ret;\n}\n","import { GameConfig, controlType, character } from \"../../gameLogic/GameConfig\";\nimport Game from \"../../gameLogic/game\";\nimport { GraphInputConfig } from \"../../components/GraphInput\";\nimport { QuestConfig } from \"../../components/Quest\";\nimport convertDataArray from \"../../questSetupHelper\";\n\n/*\n * The settings constant represents contains all settings required for a single quest.\n * In This file all necessary functions for a single quest should be defined.\n * The App component loads this into a Quest component.\n */\n\nconst graph: GraphInputConfig = {\n\txTitle: \"time in s\",\n\tyTitle: \"velocity in m/s\",\n\tminY: 0,\n\tmaxY: 5,\n\tdata: convertDataArray([2, 2, 0, 0, 0, 0, 0])\n};\n\nconst width = 1200;\n\nconst game: GameConfig = {\n\tgameWorld: {\n\t\theight: 600,\n\t\twidth: width\n\t},\n\tonPreload: onPreload,\n\tpreCreate: preCreate,\n\tafterCreate: afterCreate,\n\tcontrols: controlType.t_v_graph_interpolated,\n\tcharacter: character.hiker,\n\tcharacterSpawnXY: {\n\t\tx: 100,\n\t\ty: 400\n\t},\n\tcameraRide: [\n\t\t// First move to (400,0) and wait a second\n\t\t{\n\t\t\tx: 400,\n\t\t\ty: 0,\n\t\t\twait: 1000\n\t\t},\n\t\t// Then move back to (150,0) and wait a second\n\t\t{\n\t\t\tx: 150,\n\t\t\ty: 0,\n\t\t\twait: 1000\n\t\t}\n\t]\n};\n\nconst settings: QuestConfig = {\n\ttitle: \"Beispiel Quest 1\",\n\tid: \"exampleLevelQuest1\",\n\tdescription:\n\t\t\"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\", // cspell: disable-line\n\tgraph: graph,\n\tgame: game\n};\n\n/*\n * onPreload gets executed with the preload function of phaser.\n * The preload function is the first function that gets executed, before create and update.\n * For more information see GameConfig (just hover over the variables in a GameConfig variable, e.g. game)\n */\nfunction onPreload(this: Phaser.Scene): void {\n\tthis.load.image(\"bg\", \"assets/PlatformerAssetsBase/Background/bg.png\");\n\tthis.load.image(\"ground\", \"assets/platform.png\");\n\n\tthis.load.image(\"grassMid\", \"assets/PlatformerAssetsBase/Tiles/grassMid.png\");\n\tthis.load.image(\"grassCenter\", \"assets/PlatformerAssetsBase/Tiles/grassCenter.png\");\n\tthis.load.image(\"signRight\", \"assets/PlatformerAssetsBase/Tiles/signRight.png\");\n\tthis.load.image(\"fence\", \"assets/PlatformerAssetsBase/Tiles/fence.png\");\n\tthis.load.image(\"fenceBroken\", \"assets/PlatformerAssetsBase/Tiles/fenceBroken.png\");\n\n\tthis.load.image(\"cloud1\", \"assets/PlatformerAssetsBase/Items/cloud1.png\");\n\tthis.load.image(\"cloud2\", \"assets/PlatformerAssetsBase/Items/cloud2.png\");\n\tthis.load.image(\"cloud3\", \"assets/PlatformerAssetsBase/Items/cloud3.png\");\n\tthis.load.image(\"coinGold\", \"assets/PlatformerAssetsBase/Items/coinGold.png\");\n\tthis.load.image(\"keyYellow\", \"assets/PlatformerAssetsBase/Items/keyYellow.png\");\n}\n\n/*\n * preCreate gets executed at the beginning of the create function of phaser.\n * The create function is the second function that gets executed, after preload and before update.\n * For more information see GameConfig (just hover over the variables in a GameConfig variable, e.g. game)\n */\nfunction preCreate(this: Phaser.Scene): void {\n\t// Add background\n\tfor (let i = 0; i < 5; i++) {\n\t\tthis.add.image(256 * i, 0, \"bg\").setOrigin(0);\n\t\tthis.add.image(256 * i, 256, \"bg\").setOrigin(0);\n\t}\n\n\t// Add clouds\n\tthis.add.image(100, 120, \"cloud1\");\n\tthis.add.image(430, 100, \"cloud2\");\n\tthis.add.image(730, 110, \"cloud3\");\n\tthis.add.image(1030, 90, \"cloud3\");\n\n\t// Add signRight\n\tthis.add.image(270, 430, \"signRight\");\n\n\t// Add some fences\n\tthis.add.image(0, 430, \"fence\");\n\tthis.add.image(60, 430, \"fence\");\n\tthis.add.image(120, 430, \"fenceBroken\").setScale(-1, 1); // flip this image on the x axis\n\tthis.add.image(180, 430, \"fenceBroken\");\n}\n\n/*\n * afterCreate gets executed at the end of the create function of phaser.\n * The create function is the second function that gets executed, after preload and before update.\n * For more information see GameConfig (just hover over the variables in a GameConfig variable, e.g. game)\n */\nfunction afterCreate(this: Game): void {\n\t// Add platforms / ground\n\tconst tileWidth = 70;\n\tfor (let i = 0; i * tileWidth < width; i++) {\n\t\tthis.platforms.create(35 + tileWidth * i, 500, \"grassMid\");\n\t\tthis.platforms.create(35 + tileWidth * i, 570, \"grassCenter\");\n\t}\n\n\t// Add coinGold as points\n\tthis.points.create(350, 60, \"coinGold\");\n\tthis.points.create(500, 60, \"coinGold\");\n\tthis.dynamicGoals.create(880, 60, \"keyYellow\");\n\n\t// Add a sample trap\n\tthis.dynamicGoals.create(1400, 500, \"keyYellow\");\n\n\t// Set random bounce on points\n\tGame.setRandomBounce.call(this, this.points);\n\n\t// Set random bounce on dynamicGoals\n\tGame.setRandomBounce.call(this, this.dynamicGoals);\n}\n\nexport default settings;\n","import { GameConfig, controlType, character } from \"../../gameLogic/GameConfig\";\nimport Game from \"../../gameLogic/game\";\nimport { GraphInputConfig } from \"../../components/GraphInput\";\nimport { QuestConfig } from \"../../components/Quest\";\nimport convertDataArray from \"../../questSetupHelper\";\n\n/*\n * The settings constant represents contains all settings required for a single quest.\n * In This file all necessary functions for a single quest should be defined.\n * The App component loads this into a Quest component.\n */\n\nconst graph: GraphInputConfig = {\n\txTitle: \"time in s\",\n\tyTitle: \"velocity in m/s\",\n\tminY: 0,\n\tmaxY: 5,\n\tdata: convertDataArray([2, 2, 0, 0, 0, 0, 0])\n};\n\nconst width = 1200;\n\nconst game: GameConfig = {\n\tgameWorld: {\n\t\theight: 600,\n\t\twidth: width\n\t},\n\tonPreload: onPreload,\n\tpreCreate: preCreate,\n\tafterCreate: afterCreate,\n\tcontrols: controlType.t_v_graph_interpolated,\n\tcharacter: character.hiker,\n\tcharacterSpawnXY: {\n\t\tx: 100,\n\t\ty: 400\n\t},\n\tpointsToWin: 1\n};\n\nconst settings: QuestConfig = {\n\ttitle: \"Beispiel Quest 2\",\n\tid: \"exampleLevelQuest2\",\n\tdescription:\n\t\t\"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\", // cspell: disable-line\n\tgraph: graph,\n\tgame: game\n};\n\n/*\n * onPreload gets executed with the preload function of phaser.\n * The preload function is the first function that gets executed, before create and update.\n * For more information see GameConfig (just hover over the variables in a GameConfig variable, e.g. game)\n */\nfunction onPreload(this: Phaser.Scene): void {\n\tthis.load.image(\"bg\", \"assets/PlatformerAssetsBase/Background/bg.png\");\n\tthis.load.image(\"ground\", \"assets/platform.png\");\n\n\tthis.load.image(\"grassMid\", \"assets/PlatformerAssetsBase/Tiles/grassMid.png\");\n\tthis.load.image(\"grassCenter\", \"assets/PlatformerAssetsBase/Tiles/grassCenter.png\");\n\tthis.load.image(\"signRight\", \"assets/PlatformerAssetsBase/Tiles/signRight.png\");\n\tthis.load.image(\"fence\", \"assets/PlatformerAssetsBase/Tiles/fence.png\");\n\tthis.load.image(\"fenceBroken\", \"assets/PlatformerAssetsBase/Tiles/fenceBroken.png\");\n\n\tthis.load.image(\"cloud1\", \"assets/PlatformerAssetsBase/Items/cloud1.png\");\n\tthis.load.image(\"cloud2\", \"assets/PlatformerAssetsBase/Items/cloud2.png\");\n\tthis.load.image(\"cloud3\", \"assets/PlatformerAssetsBase/Items/cloud3.png\");\n\tthis.load.image(\"coinGold\", \"assets/PlatformerAssetsBase/Items/coinGold.png\");\n\tthis.load.image(\"bomb\", \"assets/PlatformerAssetsBase/Items/bomb.png\");\n}\n\n/*\n * preCreate gets executed at the beginning of the create function of phaser.\n * The create function is the second function that gets executed, after preload and before update.\n * For more information see GameConfig (just hover over the variables in a GameConfig variable, e.g. game)\n */\nfunction preCreate(this: Phaser.Scene): void {\n\t// Add background\n\tfor (let i = 0; i < 5; i++) {\n\t\tthis.add.image(256 * i, 0, \"bg\").setOrigin(0);\n\t\tthis.add.image(256 * i, 256, \"bg\").setOrigin(0);\n\t}\n\n\t// Add clouds\n\tthis.add.image(100, 120, \"cloud1\");\n\tthis.add.image(430, 100, \"cloud2\");\n\tthis.add.image(730, 110, \"cloud3\");\n\tthis.add.image(1030, 90, \"cloud3\");\n\n\t// Add signRight\n\tthis.add.image(270, 430, \"signRight\");\n\n\t// Add some fences\n\tthis.add.image(0, 430, \"fence\");\n\tthis.add.image(60, 430, \"fence\");\n\tthis.add.image(120, 430, \"fenceBroken\").setScale(-1, 1); // flip this image on the x axis\n\tthis.add.image(180, 430, \"fenceBroken\");\n}\n\n/*\n * afterCreate gets executed at the end of the create function of phaser.\n * The create function is the second function that gets executed, after preload and before update.\n * For more information see GameConfig (just hover over the variables in a GameConfig variable, e.g. game)\n */\nfunction afterCreate(this: Game): void {\n\t// Add platforms / ground\n\tconst tileWidth = 70;\n\tfor (let i = 0; i * tileWidth < width; i++) {\n\t\tthis.platforms.create(35 + tileWidth * i, 500, \"grassMid\");\n\t\tthis.platforms.create(35 + tileWidth * i, 570, \"grassCenter\");\n\t}\n\n\t// Add coinGold as points\n\tthis.points.create(700, 60, \"coinGold\");\n\tthis.dynamicTraps.create(800, 60, \"bomb\");\n\n\t// Add a sample trap\n\tthis.dynamicGoals.create(1400, 500, \"keyYellow\");\n\n\t// Set random bounce on points\n\tGame.setRandomBounce.call(this, this.points);\n\n\t// Set random bounce on dynamicTraps\n\tGame.setRandomBounce.call(this, this.dynamicTraps);\n}\n\nexport default settings;\n","import { QuizConfig } from \"../../components/Quiz\";\n\nconst config: QuizConfig = {\n\ttitle: \"Demo Quiz\",\n\ttext:\n\t\t\"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\",\n\tquestions: [\n\t\t{\n\t\t\tkind: \"Statement\",\n\t\t\ttext: \"Bananen sind krumm\",\n\t\t\tisTrue: true\n\t\t},\n\t\t{\n\t\t\tkind: \"Statement\",\n\t\t\ttext:\n\t\t\t\t\"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\",\n\t\t\tisTrue: true\n\t\t},\n\t\t{\n\t\t\tkind: \"MultipleChoice\",\n\t\t\ttext:\n\t\t\t\t\"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\",\n\t\t\tstatements: [\n\t\t\t\t{\n\t\t\t\t\tkind: \"Statement\",\n\t\t\t\t\ttext: \"Antwort A\",\n\t\t\t\t\tisTrue: false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkind: \"Statement\",\n\t\t\t\t\ttext: \"Antwort B\",\n\t\t\t\t\tisTrue: false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkind: \"Statement\",\n\t\t\t\t\ttext: \"Antwort C\",\n\t\t\t\t\tisTrue: true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tkind: \"SingleChoice\",\n\t\t\timgPath: \"/levels/exampleLevel/cute_pengu.jpg\",\n\t\t\ttext:\n\t\t\t\t\"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\",\n\t\t\tstatements: [\n\t\t\t\t{\n\t\t\t\t\tkind: \"Statement\",\n\t\t\t\t\ttext: \"Antwort A\",\n\t\t\t\t\tisTrue: false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkind: \"Statement\",\n\t\t\t\t\ttext: \"Antwort B\",\n\t\t\t\t\tisTrue: false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkind: \"Statement\",\n\t\t\t\t\ttext: \"Antwort C\",\n\t\t\t\t\tisTrue: true\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\nexport default config;\n","import { TheoryConfig } from \"../../components/Theory\";\n\nconst config: TheoryConfig = {\n\tslides: [\n\t\t{\n\t\t\timgPath: \"/levels/exampleLevel/cute_pengu.jpg\"\n\t\t},\n\t\t{\n\t\t\ttext:\n\t\t\t\t\"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\"\n\t\t}\n\t]\n};\n\nexport default config;\n","import { GameConfig, controlType, character } from \"../../gameLogic/GameConfig\";\nimport { GraphInputConfig } from \"../../components/GraphInput\";\nimport { QuestConfig } from \"../../components/Quest\";\nimport convertDataArray from \"../../questSetupHelper\";\nimport Game from \"../../gameLogic/game\";\n\n// TODO adjust GraphInputConfig\nconst graph: GraphInputConfig = {\n\txTitle: \"time in s\",\n\tyTitle: \"velocity in m/s\",\n\tminY: 0,\n\tmaxY: 5,\n\tdata: convertDataArray([0, 0, 0, 0, 0, 0, 0])\n};\n\nconst width = 1200;\n\n// TODO adjust GameConfig\nconst game: GameConfig = {\n\tgameWorld: {\n\t\theight: 600,\n\t\twidth: width\n\t},\n\tonPreload: onPreload,\n\tpreCreate: preCreate,\n\tafterCreate: afterCreate,\n\tcontrols: controlType.t_v_graph_interpolated,\n\tcharacter: character.hiker,\n\tcharacterSpawnXY: {\n\t\tx: 100,\n\t\ty: 400\n\t}\n};\n\n// This is the settings json we export\nconst settings: QuestConfig = {\n\ttitle: \"Quest 1\",\n\tid: \"level1Quest1\",\n\tgraph: graph,\n\tdescription:\n\t\t\"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\", // cspell: disable-line\n\tgame: game\n};\n\nfunction onPreload(this: Phaser.Scene): void {\n\tthis.load.image(\"bg\", \"assets/PlatformerAssetsBase/Background/bg.png\");\n\n\tthis.load.image(\"grassMid\", \"assets/PlatformerAssetsBase/Tiles/grassMid.png\");\n\tthis.load.image(\"grassCenter\", \"assets/PlatformerAssetsBase/Tiles/grassCenter.png\");\n\n\tthis.load.image(\"signRight\", \"assets/PlatformerAssetsBase/Tiles/signRight.png\");\n\tthis.load.image(\"fence\", \"assets/PlatformerAssetsBase/Tiles/fence.png\");\n\tthis.load.image(\"fenceBroken\", \"assets/PlatformerAssetsBase/Tiles/fenceBroken.png\");\n\tthis.load.image(\"grassBush\", \"assets/PlatformerAssetsBase/Items/grass4.png\");\n\n\tthis.load.image(\"cloud1\", \"assets/PlatformerAssetsBase/Items/cloud1.png\");\n\tthis.load.image(\"cloud2\", \"assets/PlatformerAssetsBase/Items/cloud2.png\");\n\tthis.load.image(\"cloud3\", \"assets/PlatformerAssetsBase/Items/cloud3.png\");\n\tthis.load.image(\"coinGold\", \"assets/PlatformerAssetsBase/Items/coinGold.png\");\n\tthis.load.image(\"keyYellow\", \"assets/PlatformerAssetsBase/Items/keyYellow.png\");\n\n\tthis.load.image(\"houseBL\", \"assets/PlatformerAssetsBuildings/Items/houseBeigeBottomLeft.png\");\n\tthis.load.image(\"houseBM\", \"assets/PlatformerAssetsBuildings/Items/houseBeigeBottomMid.png\");\n\tthis.load.image(\"houseBR\", \"assets/PlatformerAssetsBuildings/Items/houseBeigeBottomRight.png\");\n\tthis.load.image(\"houseML\", \"assets/PlatformerAssetsBuildings/Items/houseBeigeMidLeft.png\");\n\tthis.load.image(\"houseM\", \"assets/PlatformerAssetsBuildings/Items/houseBeige.png\");\n\tthis.load.image(\"houseMR\", \"assets/PlatformerAssetsBuildings/Items/houseBeigeMidRight.png\");\n\tthis.load.image(\"houseTL\", \"assets/PlatformerAssetsBuildings/Items/houseBeigeTopLeft.png\");\n\tthis.load.image(\"houseTM\", \"assets/PlatformerAssetsBuildings/Items/houseBeigeTopMid.png\");\n\tthis.load.image(\"houseTR\", \"assets/PlatformerAssetsBuildings/Items/houseBeigeTopRight.png\");\n\n\tthis.load.image(\"roofTL\", \"assets/PlatformerAssetsBuildings/Items/roofGreyTopLeft.png\");\n\tthis.load.image(\"roofTM\", \"assets/PlatformerAssetsBuildings/Items/roofGreyTopMid.png\");\n\tthis.load.image(\"roofTR\", \"assets/PlatformerAssetsBuildings/Items/roofGreyTopRight.png\");\n\tthis.load.image(\"roofL\", \"assets/PlatformerAssetsBuildings/Items/roofGreyLeft.png\");\n\tthis.load.image(\"roofM\", \"assets/PlatformerAssetsBuildings/Items/roofGreyMid.png\");\n\tthis.load.image(\"roofR\", \"assets/PlatformerAssetsBuildings/Items/roofGreyRight.png\");\n\n\tthis.load.image(\"doorK\", \"assets/PlatformerAssetsBuildings/Items/doorKnobAlt.png\");\n\tthis.load.image(\"doorT\", \"assets/PlatformerAssetsBuildings/Items/doorTop.png\");\n\tthis.load.image(\"doorWT\", \"assets/PlatformerAssetsBuildings/Items/doorWindowTop.png\");\n\tthis.load.image(\n\t\t\"window\",\n\t\t\"assets/PlatformerAssetsBuildings/Items/windowHighCheckeredBottom.png\"\n\t);\n\tthis.load.image(\"doorL\", \"assets/PlatformerAssetsBuildings/Items/doorLock.png\");\n\tthis.load.image(\"chimney\", \"assets/PlatformerAssetsBuildings/Items/chimneyThin.png\");\n}\n\nfunction preCreate(this: Phaser.Scene): void {\n\tfor (let i = 0; i < 5; i++) {\n\t\tthis.add.image(256 * i, 0, \"bg\").setOrigin(0);\n\t\tthis.add.image(256 * i, 256, \"bg\").setOrigin(0);\n\t}\n\tconst tileWidth = 60;\n\tfor (let i = 3; i * tileWidth < 500; i++) {\n\t\tthis.add.image(35 + tileWidth * i, 430, \"fence\");\n\t}\n\tthis.add.image(155, 430, \"fenceBroken\").setScale(-1, 1);\n\tthis.add.image(140, 430, \"signRight\");\n\tthis.add.image(100, 80, \"cloud2\");\n\tthis.add.image(270, 130, \"cloud3\");\n\tthis.add.image(530, 210, \"cloud1\");\n\tthis.add.image(700, 90, \"cloud1\");\n\tthis.add.image(890, 160, \"cloud3\");\n\tthis.add.image(1120, 120, \"cloud2\");\n\tthis.add.image(1010, 450, \"grassBush\");\n\n\t//add house\n\tthis.add.image(550, 430, \"houseBL\");\n\tthis.add.image(620, 430, \"houseBM\");\n\tthis.add.image(690, 430, \"houseBR\");\n\tthis.add.image(550, 360, \"houseML\");\n\tthis.add.image(620, 360, \"houseM\");\n\tthis.add.image(690, 360, \"houseMR\");\n\tthis.add.image(550, 290, \"houseTL\");\n\tthis.add.image(620, 290, \"houseTM\");\n\tthis.add.image(690, 290, \"houseTR\");\n\n\t//add roof\n\tthis.add.image(525, 220, \"roofM\");\n\tthis.add.image(595, 220, \"roofM\");\n\tthis.add.image(665, 220, \"roofM\");\n\tthis.add.image(715, 220, \"roofM\");\n\tthis.add.image(525, 160, \"roofTM\");\n\tthis.add.image(595, 160, \"roofTM\");\n\tthis.add.image(665, 160, \"roofTM\");\n\tthis.add.image(715, 160, \"roofTM\");\n\n\t//add door\n\tthis.add.image(620, 430, \"doorK\");\n\tthis.add.image(620, 370, \"doorWT\");\n\n\t//add window\n\tthis.add.image(670, 300, \"window\").setScale(0.7, 0.7);\n\tthis.add.image(670, 290, \"window\").setScale(0.7, -0.7);\n\n\tthis.add.image(570, 300, \"window\").setScale(0.7, 0.7);\n\tthis.add.image(570, 290, \"window\").setScale(0.7, -0.7);\n\n\tthis.add.image(655, 130, \"chimney\");\n\tthis.add.image(835, 130, \"chimney\");\n\n\t//add house 2\n\tthis.add.image(820, 430, \"houseBL\");\n\tthis.add.image(890, 430, \"houseBM\");\n\tthis.add.image(960, 430, \"houseBR\");\n\tthis.add.image(820, 360, \"houseML\");\n\tthis.add.image(890, 360, \"houseM\");\n\tthis.add.image(960, 360, \"houseMR\");\n\tthis.add.image(820, 290, \"houseTL\");\n\tthis.add.image(890, 290, \"houseTM\");\n\tthis.add.image(960, 290, \"houseTR\");\n\n\t//add roof\n\tthis.add.image(795, 220, \"roofM\");\n\tthis.add.image(865, 220, \"roofM\");\n\tthis.add.image(935, 220, \"roofM\");\n\tthis.add.image(985, 220, \"roofM\");\n\tthis.add.image(795, 160, \"roofTM\");\n\tthis.add.image(865, 160, \"roofTM\");\n\tthis.add.image(935, 160, \"roofTM\");\n\tthis.add.image(985, 160, \"roofTM\");\n\n\t//add door\n\tthis.add.image(890, 430, \"doorL\");\n\tthis.add.image(890, 370, \"doorWT\");\n\n\t//add window\n\tthis.add.image(850, 300, \"window\").setScale(0.7, 0.7);\n\tthis.add.image(850, 290, \"window\").setScale(0.7, -0.7);\n\n\tthis.add.image(930, 300, \"window\").setScale(0.7, 0.7);\n\tthis.add.image(930, 290, \"window\").setScale(0.7, -0.7);\n}\n\nfunction afterCreate(this: Game): void {\n\t// TODO: add platforms / ground, coins, goals, traps etc.\n\tconst tileWidth = 70;\n\tfor (let i = 0; i * tileWidth < width; i++) {\n\t\tthis.platforms.create(35 + tileWidth * i, 500, \"grassMid\");\n\t\tthis.platforms.create(35 + tileWidth * i, 570, \"grassCenter\");\n\t}\n\tthis.dynamicGoals.create(755, 400, \"keyYellow\");\n}\n\nexport default settings;\n","import { GameConfig, controlType, character } from \"../../gameLogic/GameConfig\";\nimport { GraphInputConfig } from \"../../components/GraphInput\";\nimport { QuestConfig } from \"../../components/Quest\";\nimport convertDataArray from \"../../questSetupHelper\";\nimport Game from \"../../gameLogic/game\";\n\n// TODO adjust GraphInputConfig\nconst graph: GraphInputConfig = {\n\txTitle: \"time in s\",\n\tyTitle: \"velocity in m/s\",\n\tminY: 0,\n\tmaxY: 20,\n\tdata: convertDataArray([5, 5, 5, 5, 5])\n};\n\nconst width = 1200;\n\n// TODO adjust GameConfig\nconst game: GameConfig = {\n\tgameWorld: {\n\t\theight: 600,\n\t\twidth: width\n\t},\n\tonPreload: onPreload,\n\tpreCreate: preCreate,\n\tafterCreate: afterCreate,\n\tonUpdate: onUpdate,\n\tcontrols: controlType.t_v_graph_interpolated,\n\tcharacter: character.hiker,\n\tcharacterSpawnXY: {\n\t\tx: 100,\n\t\ty: 400\n\t}\n};\n\n// This is the settings json we export\nconst settings: QuestConfig = {\n\ttitle: \"Quest 2\",\n\tid: \"level1Quest2\",\n\tdescription:\n\t\t\"Du hast verzauberte Stiefel bekommen, mit denen du selbst Usain Bolt neidisch machen könntest. Schaffst du es mit genügend Schwung auf die andere Seite und dort bei der Fahne stehen zu bleiben? Probiere es ruhig ein paar mal aus, es ist ungewohnt mit neuen Latschen.\", // cspell: disable-line\n\tgraph: graph,\n\tgame: game\n};\n\nfunction onPreload(this: Phaser.Scene): void {\n\tconsole.log(\"onPreload called\");\n\n\tthis.load.image(\"bg\", \"assets/PlatformerAssetsBase/Background/bg.png\");\n\n\tthis.load.image(\"grassMid\", \"assets/PlatformerAssetsBase/Tiles/grassMid.png\");\n\tthis.load.image(\"grassCenter\", \"assets/PlatformerAssetsBase/Tiles/grassCenter.png\");\n\n\tthis.load.image(\"house_front\", \"assets/BackgroundElements/house_beige_front.png\");\n\tthis.load.image(\"mushroom\", \"assets/PlatformerAssetsBase/Items/mushroomRed.png\");\n\tthis.load.image(\"grassBush\", \"assets/PlatformerAssetsBase/Items/grass4.png\");\n\tthis.load.image(\"signRight\", \"assets/PlatformerAssetsBase/Tiles/signRight.png\");\n\n\tthis.load.image(\"sun\", \"assets/PlatformerAssetsBase/Items/sun.png\");\n\tthis.load.image(\"cloud1\", \"assets/PlatformerAssetsBase/Items/cloud1.png\");\n\tthis.load.image(\"cloud2\", \"assets/PlatformerAssetsBase/Items/cloud2.png\");\n\tthis.load.image(\"cloud3\", \"assets/PlatformerAssetsBase/Items/cloud3.png\");\n\tthis.load.image(\"tree_beige\", \"assets/BackgroundElements/tree01.png\");\n\tthis.load.image(\"tree_green_1\", \"assets/BackgroundElements/tree02.png\");\n\tthis.load.image(\"tree_green_2\", \"assets/BackgroundElements/tree21.png\");\n\tthis.load.image(\"coinGold\", \"assets/PlatformerAssetsBase/Items/coinGold.png\");\n\tthis.load.image(\"keyYellow\", \"assets/PlatformerAssetsBase/Items/keyYellow.png\");\n\tthis.load.image(\"spikes\", \"assets/PlatformerAssetsBase/Items/spikes.png\");\n}\n\nfunction preCreate(this: Phaser.Scene): void {\n\tconsole.log(\"preCreate called\");\n\n\t// Add background\n\tfor (let i = 0; i < 5; i++) {\n\t\tthis.add.image(256 * i, 0, \"bg\").setOrigin(0);\n\t\tthis.add.image(256 * i, 256, \"bg\").setOrigin(0);\n\t\tthis.add.image(256 * i, 512, \"bg\").setOrigin(0);\n\t}\n\n\t// Add clouds\n\tthis.add.image(80, 120, \"cloud1\");\n\tthis.add.image(330, 100, \"cloud2\");\n\tthis.add.image(730, 110, \"cloud2\");\n\tthis.add.image(1030, 90, \"cloud3\");\n\n\t// Add house\n\tthis.add.image(40, 360, \"house_front\").setScale(2);\n\n\t// Add signRight\n\tthis.add.image(140, 430, \"signRight\");\n\n\tthis.add.image(720, 350, \"tree_beige\");\n\tthis.add.image(840, 350, \"tree_green_1\");\n\tthis.add.image(1000, 350, \"tree_green_2\");\n\tthis.add.image(1100, 350, \"tree_beige\");\n\tthis.add.image(1200, 350, \"tree_green_1\");\n\n\tthis.add.image(160, 450, \"grassBush\");\n\tthis.add.image(700, 450, \"grassBush\").setScale(-1, 1);\n\n\tthis.add.image(740, 430, \"mushroom\").setScale(0.5);\n\tthis.add.image(1030, 430, \"mushroom\").setScale(0.5);\n}\n\nfunction afterCreate(this: Game): void {\n\tconsole.log(\"afterCreate called\");\n\n\t// Add platforms / ground\n\tconst tileWidth = 70;\n\tfor (let i = 0; i * tileWidth < width; i++) {\n\t\t//gap at 385\n\t\tif (i != 5 && i != 6) {\n\t\t\tthis.platforms.create(35 + tileWidth * i, 500, \"grassMid\");\n\t\t\tthis.platforms.create(35 + tileWidth * i, 570, \"grassCenter\");\n\t\t}\n\t}\n\n\t// Add coinGold as points\n\tthis.points.create(300, 60, \"coinGold\");\n\tthis.points.create(540, 60, \"coinGold\");\n\tthis.dynamicGoals.create(950, 50, \"keyYellow\");\n\n\t// Add a sample trap\n\tthis.staticTraps.create(1080, 433, \"spikes\").setScale(0.5);\n\tthis.staticTraps.create(420, 650, \"spikes\").setScale(0.5);\n\n\tthis.staticTraps.create(420, 650, \"spikes\").setScale(0.5);\n\n\t// Set random bounce on points\n\tGame.setRandomBounce.call(this, this.points);\n\n\t// Set random bounce on dynamicGoals\n\tGame.setRandomBounce.call(this, this.dynamicGoals);\n}\n\nfunction onUpdate(this: Game): void {\n\t//pass\n}\n\nexport default settings;\n","import { GameConfig, controlType, character } from \"../../gameLogic/GameConfig\";\nimport { GraphInputConfig } from \"../../components/GraphInput\";\nimport { QuestConfig } from \"../../components/Quest\";\nimport convertDataArray from \"../../questSetupHelper\";\nimport Game from \"../../gameLogic/game\";\n\n// TODO adjust GraphInputConfig\nconst graph: GraphInputConfig = {\n\txTitle: \"time in s\",\n\tyTitle: \"velocity in m/s\",\n\tminY: 0,\n\tmaxY: 5,\n\tdata: convertDataArray([0, 0, 0, 0, 0, 0, 0, 0, 0])\n};\n\nconst width = 1200;\n\n// TODO adjust GameConfig\nconst game: GameConfig = {\n\tgameWorld: {\n\t\theight: 600,\n\t\twidth: width\n\t},\n\tonPreload: onPreload,\n\tpreCreate: preCreate,\n\tafterCreate: afterCreate,\n\tcontrols: controlType.t_v_graph_interpolated,\n\tcharacter: character.hiker\n};\n\n// This is the settings json we export\nconst settings: QuestConfig = {\n\ttitle: \"Vorschau Level 2\",\n\tid: \"level2Quest1\",\n\tgraph: graph,\n\tdescription:\n\t\t\"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\", // cspell: disable-line\n\tgame: game\n};\n\nfunction onPreload(this: Phaser.Scene): void {\n\t// TODO: Load all required images\n}\n\nfunction preCreate(this: Phaser.Scene): void {\n\t// TODO: Add background\n}\n\nfunction afterCreate(this: Game): void {\n\t// TODO: add platforms / ground, coins, goals, traps etc.\n}\n\nexport default settings;\n","import React, { ReactElement } from \"react\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport Navigation from \"./components/Navigation\";\nimport LandingPage from \"./components/LandingPage\";\nimport Quest from \"./components/Quest\";\nimport Tutorial from \"./components/Tutorial\";\nimport LevelOverview from \"./components/LevelOverview\";\nimport Footer from \"./components/Footer\";\nimport { Quiz } from \"./components/Quiz\";\nimport { Theory } from \"./components/Theory\";\n\nimport exampleQuest1 from \"./levels/exampleLevels/exampleQuest1\";\nimport exampleQuest2 from \"./levels/exampleLevels/exampleQuest2\";\nimport exampleQuiz1 from \"./levels/exampleLevels/exampleQuiz1\";\nimport exampleTheory1 from \"./levels/exampleLevels/exampleTheory1\";\nimport level1Quest1 from \"./levels/level1/level1Quest1\";\nimport level1Quest2 from \"./levels/level1/level1Quest2\";\nimport level2Quest1 from \"./levels/level2/level2Quest1\";\n\nfunction App(): ReactElement {\n\treturn (\n\t\t<HashRouter basename=\"/\">\n\t\t\t<Navigation />\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\" exact component={LandingPage} />\n\t\t\t\t<Route path=\"/LevelOverview\" exact component={LevelOverview} />\n\t\t\t\t<Route\n\t\t\t\t\tpath=\"/ExampleQuest1\"\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={() => (\n\t\t\t\t\t\t<Quest config={exampleQuest1} nextPage=\"/ExampleQuest2\"></Quest>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\tpath=\"/ExampleQuest2\"\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={() => (\n\t\t\t\t\t\t<Quest config={exampleQuest2} nextPage=\"/ExampleQuiz1\"></Quest>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\tpath=\"/ExampleQuiz1\"\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={() => <Quiz config={exampleQuiz1}></Quiz>}\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\tpath=\"/ExampleTheory1\"\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={() => <Theory config={exampleTheory1}></Theory>}\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\tpath=\"/level1Quest1\"\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={() => <Quest config={level1Quest1} nextPage=\"/level1Quest2\"></Quest>}\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\tpath=\"/level1Quest2\"\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={() => <Quest config={level1Quest2} nextPage=\"/level2Quest1\"></Quest>}\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\tpath=\"/level2Quest1\"\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={() => (\n\t\t\t\t\t\t<Quest config={level2Quest1} nextPage=\"/ExampleQuest1\"></Quest>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t\t<Route path=\"/Tutorial\" exact component={Tutorial} />\n\t\t\t</Switch>\n\t\t\t<Footer />\n\t\t</HashRouter>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./css/styles.css\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}